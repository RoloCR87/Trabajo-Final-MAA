{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Arreglos-finales_Grupo_03(7-6-22).ipynb",
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "LfK9q9MWENYG"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "voces = pd.read_csv(\"https://raw.githubusercontent.com/RoloCR87/Trabajo-Final-MAA/main/voces.csv\", sep = \";\")"
      ],
      "metadata": {
        "id": "8-rfP87YJaL8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 488
        },
        "id": "_ZrZaPyKEwJT",
        "outputId": "a9522b7f-32fa-42c4-bdef-679061d6f502"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      meanfreq        sd    median       Q25       Q75       IQR  \\\n",
              "0     0.059781  0.064241  0.032027  0.015071  0.090193  0.075122   \n",
              "1     0.066009  0.067310  0.040229  0.019414  0.092666  0.073252   \n",
              "2     0.077316  0.083829  0.036718  0.008701  0.131908  0.123207   \n",
              "3     0.151228  0.072111  0.158011  0.096582  0.207955  0.111374   \n",
              "4     0.135120  0.079146  0.124656  0.078720  0.206045  0.127325   \n",
              "...        ...       ...       ...       ...       ...       ...   \n",
              "3163  0.131884  0.084734  0.153707  0.049285  0.201144  0.151859   \n",
              "3164  0.116221  0.089221  0.076758  0.042718  0.204911  0.162193   \n",
              "3165  0.142056  0.095798  0.183731  0.033424  0.224360  0.190936   \n",
              "3166  0.143659  0.090628  0.184976  0.043508  0.219943  0.176435   \n",
              "3167  0.165509  0.092884  0.183044  0.070072  0.250827  0.180756   \n",
              "\n",
              "                     skew                 kurt    sp.ent       sfm  ...  \\\n",
              "0     128.634.618.371.626  274.402.905.502.067  0.893369  0.491918  ...   \n",
              "1     224.232.853.628.204  634.613.854.542.068  0.892193  0.513724  ...   \n",
              "2     307.571.545.800.584    1.024.927.704.721  0.846389  0.478905  ...   \n",
              "3     123.283.127.554.372  417.729.621.025.317  0.963322  0.727232  ...   \n",
              "4     110.117.366.551.545   43.337.131.547.091  0.971955  0.783568  ...   \n",
              "...                   ...                  ...       ...       ...  ...   \n",
              "3163  176.212.855.902.146  663.038.301.533.104  0.962934  0.763182  ...   \n",
              "3164    0.693730265800808  250.395.446.908.969  0.960716  0.709570  ...   \n",
              "3165   18.765.016.261.382  660.450.859.443.523  0.946854  0.654196  ...   \n",
              "3166  159.106.489.452.459  538.829.754.263.834  0.950436  0.675470  ...   \n",
              "3167  170.502.911.922.022  576.911.536.636.857  0.938829  0.601529  ...   \n",
              "\n",
              "                centroid             meanfun              minfun  \\\n",
              "0     0.0597809849598081   0.084279106440321  0.0157016683022571   \n",
              "1      0.066008740387572   0.107936553670454  0.0158259149357072   \n",
              "2     0.0773155026958227  0.0987062615673936  0.0156555772994129   \n",
              "3      0.151228091724635  0.0889648485504597   0.017797552836485   \n",
              "4      0.135120387296677   0.106397844620363  0.0169312169312169   \n",
              "...                  ...                 ...                 ...   \n",
              "3163   0.131883734383811      0.182789590594  0.0837696335078534   \n",
              "3164   0.116220922114276   0.188979665912333  0.0344086021505376   \n",
              "3165   0.142056255712406   0.209917676760527  0.0395061728395062   \n",
              "3166   0.143658744830027   0.172374995915133  0.0344827586206897   \n",
              "3167   0.165508946001837   0.185606931233589  0.0622568093385214   \n",
              "\n",
              "                 maxfun              meandom    mindom      maxdom  \\\n",
              "0     0.275862068965517            0.0078125  0.007812   0.0078125   \n",
              "1                  0.25  0.00901442307692308  0.007812   0.0546875   \n",
              "2     0.271186440677966  0.00799005681818182  0.007812    0.015625   \n",
              "3                  0.25    0.201497395833333  0.007812      0.5625   \n",
              "4     0.266666666666667            0.7128125  0.007812   5.484.375   \n",
              "...                 ...                  ...       ...         ...   \n",
              "3163  0.262295081967213    0.832899305555556  0.007812  42.109.375   \n",
              "3164  0.275862068965517    0.909855769230769  0.039062  36.796.875   \n",
              "3165  0.275862068965517    0.494270833333333  0.007812      29.375   \n",
              "3166               0.25    0.791360294117647  0.007812     359.375   \n",
              "3167  0.271186440677966    0.227022058823529  0.007812   0.5546875   \n",
              "\n",
              "         dfrange   modindx     genero  \n",
              "0              0  0.000000  Masculino  \n",
              "1       0.046875  0.052632  Masculino  \n",
              "2      0.0078125  0.046512  Masculino  \n",
              "3      0.5546875  0.247119  Masculino  \n",
              "4     54.765.625  0.208274  Masculino  \n",
              "...          ...       ...        ...  \n",
              "3163   4.203.125  0.161929   Femenino  \n",
              "3164   3.640.625  0.277897   Femenino  \n",
              "3165  29.296.875  0.194759   Femenino  \n",
              "3166  35.859.375  0.311002   Femenino  \n",
              "3167    0.546875  0.350000   Femenino  \n",
              "\n",
              "[3168 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7a9804cb-bab2-4fe0-86c0-5b271f3287c9\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>meanfreq</th>\n",
              "      <th>sd</th>\n",
              "      <th>median</th>\n",
              "      <th>Q25</th>\n",
              "      <th>Q75</th>\n",
              "      <th>IQR</th>\n",
              "      <th>skew</th>\n",
              "      <th>kurt</th>\n",
              "      <th>sp.ent</th>\n",
              "      <th>sfm</th>\n",
              "      <th>...</th>\n",
              "      <th>centroid</th>\n",
              "      <th>meanfun</th>\n",
              "      <th>minfun</th>\n",
              "      <th>maxfun</th>\n",
              "      <th>meandom</th>\n",
              "      <th>mindom</th>\n",
              "      <th>maxdom</th>\n",
              "      <th>dfrange</th>\n",
              "      <th>modindx</th>\n",
              "      <th>genero</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.059781</td>\n",
              "      <td>0.064241</td>\n",
              "      <td>0.032027</td>\n",
              "      <td>0.015071</td>\n",
              "      <td>0.090193</td>\n",
              "      <td>0.075122</td>\n",
              "      <td>128.634.618.371.626</td>\n",
              "      <td>274.402.905.502.067</td>\n",
              "      <td>0.893369</td>\n",
              "      <td>0.491918</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0597809849598081</td>\n",
              "      <td>0.084279106440321</td>\n",
              "      <td>0.0157016683022571</td>\n",
              "      <td>0.275862068965517</td>\n",
              "      <td>0.0078125</td>\n",
              "      <td>0.007812</td>\n",
              "      <td>0.0078125</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>Masculino</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.066009</td>\n",
              "      <td>0.067310</td>\n",
              "      <td>0.040229</td>\n",
              "      <td>0.019414</td>\n",
              "      <td>0.092666</td>\n",
              "      <td>0.073252</td>\n",
              "      <td>224.232.853.628.204</td>\n",
              "      <td>634.613.854.542.068</td>\n",
              "      <td>0.892193</td>\n",
              "      <td>0.513724</td>\n",
              "      <td>...</td>\n",
              "      <td>0.066008740387572</td>\n",
              "      <td>0.107936553670454</td>\n",
              "      <td>0.0158259149357072</td>\n",
              "      <td>0.25</td>\n",
              "      <td>0.00901442307692308</td>\n",
              "      <td>0.007812</td>\n",
              "      <td>0.0546875</td>\n",
              "      <td>0.046875</td>\n",
              "      <td>0.052632</td>\n",
              "      <td>Masculino</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.077316</td>\n",
              "      <td>0.083829</td>\n",
              "      <td>0.036718</td>\n",
              "      <td>0.008701</td>\n",
              "      <td>0.131908</td>\n",
              "      <td>0.123207</td>\n",
              "      <td>307.571.545.800.584</td>\n",
              "      <td>1.024.927.704.721</td>\n",
              "      <td>0.846389</td>\n",
              "      <td>0.478905</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0773155026958227</td>\n",
              "      <td>0.0987062615673936</td>\n",
              "      <td>0.0156555772994129</td>\n",
              "      <td>0.271186440677966</td>\n",
              "      <td>0.00799005681818182</td>\n",
              "      <td>0.007812</td>\n",
              "      <td>0.015625</td>\n",
              "      <td>0.0078125</td>\n",
              "      <td>0.046512</td>\n",
              "      <td>Masculino</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.151228</td>\n",
              "      <td>0.072111</td>\n",
              "      <td>0.158011</td>\n",
              "      <td>0.096582</td>\n",
              "      <td>0.207955</td>\n",
              "      <td>0.111374</td>\n",
              "      <td>123.283.127.554.372</td>\n",
              "      <td>417.729.621.025.317</td>\n",
              "      <td>0.963322</td>\n",
              "      <td>0.727232</td>\n",
              "      <td>...</td>\n",
              "      <td>0.151228091724635</td>\n",
              "      <td>0.0889648485504597</td>\n",
              "      <td>0.017797552836485</td>\n",
              "      <td>0.25</td>\n",
              "      <td>0.201497395833333</td>\n",
              "      <td>0.007812</td>\n",
              "      <td>0.5625</td>\n",
              "      <td>0.5546875</td>\n",
              "      <td>0.247119</td>\n",
              "      <td>Masculino</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.135120</td>\n",
              "      <td>0.079146</td>\n",
              "      <td>0.124656</td>\n",
              "      <td>0.078720</td>\n",
              "      <td>0.206045</td>\n",
              "      <td>0.127325</td>\n",
              "      <td>110.117.366.551.545</td>\n",
              "      <td>43.337.131.547.091</td>\n",
              "      <td>0.971955</td>\n",
              "      <td>0.783568</td>\n",
              "      <td>...</td>\n",
              "      <td>0.135120387296677</td>\n",
              "      <td>0.106397844620363</td>\n",
              "      <td>0.0169312169312169</td>\n",
              "      <td>0.266666666666667</td>\n",
              "      <td>0.7128125</td>\n",
              "      <td>0.007812</td>\n",
              "      <td>5.484.375</td>\n",
              "      <td>54.765.625</td>\n",
              "      <td>0.208274</td>\n",
              "      <td>Masculino</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3163</th>\n",
              "      <td>0.131884</td>\n",
              "      <td>0.084734</td>\n",
              "      <td>0.153707</td>\n",
              "      <td>0.049285</td>\n",
              "      <td>0.201144</td>\n",
              "      <td>0.151859</td>\n",
              "      <td>176.212.855.902.146</td>\n",
              "      <td>663.038.301.533.104</td>\n",
              "      <td>0.962934</td>\n",
              "      <td>0.763182</td>\n",
              "      <td>...</td>\n",
              "      <td>0.131883734383811</td>\n",
              "      <td>0.182789590594</td>\n",
              "      <td>0.0837696335078534</td>\n",
              "      <td>0.262295081967213</td>\n",
              "      <td>0.832899305555556</td>\n",
              "      <td>0.007812</td>\n",
              "      <td>42.109.375</td>\n",
              "      <td>4.203.125</td>\n",
              "      <td>0.161929</td>\n",
              "      <td>Femenino</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3164</th>\n",
              "      <td>0.116221</td>\n",
              "      <td>0.089221</td>\n",
              "      <td>0.076758</td>\n",
              "      <td>0.042718</td>\n",
              "      <td>0.204911</td>\n",
              "      <td>0.162193</td>\n",
              "      <td>0.693730265800808</td>\n",
              "      <td>250.395.446.908.969</td>\n",
              "      <td>0.960716</td>\n",
              "      <td>0.709570</td>\n",
              "      <td>...</td>\n",
              "      <td>0.116220922114276</td>\n",
              "      <td>0.188979665912333</td>\n",
              "      <td>0.0344086021505376</td>\n",
              "      <td>0.275862068965517</td>\n",
              "      <td>0.909855769230769</td>\n",
              "      <td>0.039062</td>\n",
              "      <td>36.796.875</td>\n",
              "      <td>3.640.625</td>\n",
              "      <td>0.277897</td>\n",
              "      <td>Femenino</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3165</th>\n",
              "      <td>0.142056</td>\n",
              "      <td>0.095798</td>\n",
              "      <td>0.183731</td>\n",
              "      <td>0.033424</td>\n",
              "      <td>0.224360</td>\n",
              "      <td>0.190936</td>\n",
              "      <td>18.765.016.261.382</td>\n",
              "      <td>660.450.859.443.523</td>\n",
              "      <td>0.946854</td>\n",
              "      <td>0.654196</td>\n",
              "      <td>...</td>\n",
              "      <td>0.142056255712406</td>\n",
              "      <td>0.209917676760527</td>\n",
              "      <td>0.0395061728395062</td>\n",
              "      <td>0.275862068965517</td>\n",
              "      <td>0.494270833333333</td>\n",
              "      <td>0.007812</td>\n",
              "      <td>29.375</td>\n",
              "      <td>29.296.875</td>\n",
              "      <td>0.194759</td>\n",
              "      <td>Femenino</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3166</th>\n",
              "      <td>0.143659</td>\n",
              "      <td>0.090628</td>\n",
              "      <td>0.184976</td>\n",
              "      <td>0.043508</td>\n",
              "      <td>0.219943</td>\n",
              "      <td>0.176435</td>\n",
              "      <td>159.106.489.452.459</td>\n",
              "      <td>538.829.754.263.834</td>\n",
              "      <td>0.950436</td>\n",
              "      <td>0.675470</td>\n",
              "      <td>...</td>\n",
              "      <td>0.143658744830027</td>\n",
              "      <td>0.172374995915133</td>\n",
              "      <td>0.0344827586206897</td>\n",
              "      <td>0.25</td>\n",
              "      <td>0.791360294117647</td>\n",
              "      <td>0.007812</td>\n",
              "      <td>359.375</td>\n",
              "      <td>35.859.375</td>\n",
              "      <td>0.311002</td>\n",
              "      <td>Femenino</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3167</th>\n",
              "      <td>0.165509</td>\n",
              "      <td>0.092884</td>\n",
              "      <td>0.183044</td>\n",
              "      <td>0.070072</td>\n",
              "      <td>0.250827</td>\n",
              "      <td>0.180756</td>\n",
              "      <td>170.502.911.922.022</td>\n",
              "      <td>576.911.536.636.857</td>\n",
              "      <td>0.938829</td>\n",
              "      <td>0.601529</td>\n",
              "      <td>...</td>\n",
              "      <td>0.165508946001837</td>\n",
              "      <td>0.185606931233589</td>\n",
              "      <td>0.0622568093385214</td>\n",
              "      <td>0.271186440677966</td>\n",
              "      <td>0.227022058823529</td>\n",
              "      <td>0.007812</td>\n",
              "      <td>0.5546875</td>\n",
              "      <td>0.546875</td>\n",
              "      <td>0.350000</td>\n",
              "      <td>Femenino</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3168 rows × 21 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7a9804cb-bab2-4fe0-86c0-5b271f3287c9')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-7a9804cb-bab2-4fe0-86c0-5b271f3287c9 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-7a9804cb-bab2-4fe0-86c0-5b271f3287c9');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "voces.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Mz9S0TzvE0Ne",
        "outputId": "8c21294e-6416-4050-9a59-10c50d6e3d5a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 3168 entries, 0 to 3167\n",
            "Data columns (total 21 columns):\n",
            " #   Column    Non-Null Count  Dtype  \n",
            "---  ------    --------------  -----  \n",
            " 0   meanfreq  3168 non-null   float64\n",
            " 1   sd        3166 non-null   float64\n",
            " 2   median    3168 non-null   float64\n",
            " 3   Q25       3168 non-null   float64\n",
            " 4   Q75       3166 non-null   float64\n",
            " 5   IQR       3167 non-null   float64\n",
            " 6   skew      3168 non-null   object \n",
            " 7   kurt      3168 non-null   object \n",
            " 8   sp.ent    3167 non-null   float64\n",
            " 9   sfm       3168 non-null   float64\n",
            " 10  mode      3167 non-null   object \n",
            " 11  centroid  3168 non-null   object \n",
            " 12  meanfun   3168 non-null   object \n",
            " 13  minfun    3168 non-null   object \n",
            " 14  maxfun    3168 non-null   object \n",
            " 15  meandom   3168 non-null   object \n",
            " 16  mindom    3168 non-null   float64\n",
            " 17  maxdom    3161 non-null   object \n",
            " 18  dfrange   3167 non-null   object \n",
            " 19  modindx   3168 non-null   float64\n",
            " 20  genero    3164 non-null   object \n",
            "dtypes: float64(10), object(11)\n",
            "memory usage: 519.9+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "voces.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "R6TeneC7WkkS",
        "outputId": "1d30b3be-4336-405f-ccad-6b99d0455609"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          meanfreq           sd       median          Q25          Q75  \\\n",
              "count  3168.000000  3166.000000  3168.000000  3168.000000  3166.000000   \n",
              "mean      0.180907     0.057115     0.185621     0.140456     0.224786   \n",
              "std       0.029918     0.016652     0.036360     0.048680     0.023632   \n",
              "min       0.039363     0.018363     0.010975     0.000229     0.042946   \n",
              "25%       0.163662     0.041942     0.169593     0.111087     0.208762   \n",
              "50%       0.184838     0.059143     0.190032     0.140286     0.225710   \n",
              "75%       0.199146     0.066992     0.210618     0.175939     0.243681   \n",
              "max       0.251124     0.115273     0.261224     0.247347     0.273469   \n",
              "\n",
              "               IQR       sp.ent          sfm       mindom      modindx  \n",
              "count  3167.000000  3167.000000  3168.000000  3168.000000  3168.000000  \n",
              "mean      0.084298     0.895105     0.408216     0.052647     0.173752  \n",
              "std       0.042785     0.044970     0.177521     0.063299     0.119454  \n",
              "min       0.014558     0.738651     0.036876     0.004883     0.000000  \n",
              "25%       0.042549     0.861803     0.258041     0.007812     0.099766  \n",
              "50%       0.094274     0.901728     0.396335     0.023438     0.139357  \n",
              "75%       0.114167     0.928671     0.533676     0.070312     0.209183  \n",
              "max       0.252225     0.981997     0.842936     0.458984     0.932374  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7486e046-d79a-4aa8-91db-3e0bde98be7f\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>meanfreq</th>\n",
              "      <th>sd</th>\n",
              "      <th>median</th>\n",
              "      <th>Q25</th>\n",
              "      <th>Q75</th>\n",
              "      <th>IQR</th>\n",
              "      <th>sp.ent</th>\n",
              "      <th>sfm</th>\n",
              "      <th>mindom</th>\n",
              "      <th>modindx</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>3168.000000</td>\n",
              "      <td>3166.000000</td>\n",
              "      <td>3168.000000</td>\n",
              "      <td>3168.000000</td>\n",
              "      <td>3166.000000</td>\n",
              "      <td>3167.000000</td>\n",
              "      <td>3167.000000</td>\n",
              "      <td>3168.000000</td>\n",
              "      <td>3168.000000</td>\n",
              "      <td>3168.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>0.180907</td>\n",
              "      <td>0.057115</td>\n",
              "      <td>0.185621</td>\n",
              "      <td>0.140456</td>\n",
              "      <td>0.224786</td>\n",
              "      <td>0.084298</td>\n",
              "      <td>0.895105</td>\n",
              "      <td>0.408216</td>\n",
              "      <td>0.052647</td>\n",
              "      <td>0.173752</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>0.029918</td>\n",
              "      <td>0.016652</td>\n",
              "      <td>0.036360</td>\n",
              "      <td>0.048680</td>\n",
              "      <td>0.023632</td>\n",
              "      <td>0.042785</td>\n",
              "      <td>0.044970</td>\n",
              "      <td>0.177521</td>\n",
              "      <td>0.063299</td>\n",
              "      <td>0.119454</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.039363</td>\n",
              "      <td>0.018363</td>\n",
              "      <td>0.010975</td>\n",
              "      <td>0.000229</td>\n",
              "      <td>0.042946</td>\n",
              "      <td>0.014558</td>\n",
              "      <td>0.738651</td>\n",
              "      <td>0.036876</td>\n",
              "      <td>0.004883</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>0.163662</td>\n",
              "      <td>0.041942</td>\n",
              "      <td>0.169593</td>\n",
              "      <td>0.111087</td>\n",
              "      <td>0.208762</td>\n",
              "      <td>0.042549</td>\n",
              "      <td>0.861803</td>\n",
              "      <td>0.258041</td>\n",
              "      <td>0.007812</td>\n",
              "      <td>0.099766</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>0.184838</td>\n",
              "      <td>0.059143</td>\n",
              "      <td>0.190032</td>\n",
              "      <td>0.140286</td>\n",
              "      <td>0.225710</td>\n",
              "      <td>0.094274</td>\n",
              "      <td>0.901728</td>\n",
              "      <td>0.396335</td>\n",
              "      <td>0.023438</td>\n",
              "      <td>0.139357</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>0.199146</td>\n",
              "      <td>0.066992</td>\n",
              "      <td>0.210618</td>\n",
              "      <td>0.175939</td>\n",
              "      <td>0.243681</td>\n",
              "      <td>0.114167</td>\n",
              "      <td>0.928671</td>\n",
              "      <td>0.533676</td>\n",
              "      <td>0.070312</td>\n",
              "      <td>0.209183</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>0.251124</td>\n",
              "      <td>0.115273</td>\n",
              "      <td>0.261224</td>\n",
              "      <td>0.247347</td>\n",
              "      <td>0.273469</td>\n",
              "      <td>0.252225</td>\n",
              "      <td>0.981997</td>\n",
              "      <td>0.842936</td>\n",
              "      <td>0.458984</td>\n",
              "      <td>0.932374</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7486e046-d79a-4aa8-91db-3e0bde98be7f')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-7486e046-d79a-4aa8-91db-3e0bde98be7f button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-7486e046-d79a-4aa8-91db-3e0bde98be7f');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Interpretar"
      ],
      "metadata": {
        "id": "LAabmp2xWuv0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Valores faltantes"
      ],
      "metadata": {
        "id": "V_hNKGNrJmku"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print('Missing entries:', voces.isnull().sum().sum())\n",
        "print('\\n')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1v4U5t-SJyo_",
        "outputId": "c10c0853-9e2d-4361-d6b4-85fd163e3aef"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Missing entries: 19\n",
            "\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "voces.isnull(). sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "v1EMAly1J5of",
        "outputId": "5facac1f-f24a-42a6-dd41-43b3753fcf42"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "meanfreq    0\n",
              "sd          2\n",
              "median      0\n",
              "Q25         0\n",
              "Q75         2\n",
              "IQR         1\n",
              "skew        0\n",
              "kurt        0\n",
              "sp.ent      1\n",
              "sfm         0\n",
              "mode        1\n",
              "centroid    0\n",
              "meanfun     0\n",
              "minfun      0\n",
              "maxfun      0\n",
              "meandom     0\n",
              "mindom      0\n",
              "maxdom      7\n",
              "dfrange     1\n",
              "modindx     0\n",
              "genero      4\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#En la columna sd hay 2 datos nulos, en la columna Q75 hay 2, en la columna IQR hay 1, en la columna sp.ent hay 1, en la columna mode hay 1, en la columna maxodm hay 7, en la columna dfrange hay 1 y en la columna genero hay 4"
      ],
      "metadata": {
        "id": "BVI1xdElKE9d"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Cambiar tipos de variable de object a float y eliminar valores nulos"
      ],
      "metadata": {
        "id": "Pyb_K1P0KS7x"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Variable sd"
      ],
      "metadata": {
        "id": "zVvnreTFKhJm"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#La variable SD está en formato float, por lo que no se debe cambiar de formato, como unicamente tiene 2 variables nulas, se decide eliminarlas"
      ],
      "metadata": {
        "id": "F8Y1bYsvKmbt"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces = voces.dropna(subset = [\"sd\"])"
      ],
      "metadata": {
        "id": "oXYxX-O3Kq35"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"sd\"].isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TAto8jm6LDq9",
        "outputId": "630e5083-6a96-4b72-ae6b-e2d122a7a85c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Ya la variable SD no contiene valores nulos"
      ],
      "metadata": {
        "id": "tSWnxzacLHZB"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Variable Q75\n",
        "#La variable Q75 está en formato float, por lo que no se debe hacer cambio de variable, como unicamente contiene 2 valores nulos la decision es eliminarlos"
      ],
      "metadata": {
        "id": "2rXujcReLJxU"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces = voces.dropna(subset = [\"Q75\"])"
      ],
      "metadata": {
        "id": "_PeQJjIlLRxO"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"Q75\"].isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5S0_TIAULWgf",
        "outputId": "e7202ad5-0847-4bf2-f64d-887798cbb818"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#La variable Q75 ya no presenta valores nulos"
      ],
      "metadata": {
        "id": "bSJC-E82Lh6B"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Variable IQR\n",
        "#La variable IQR está en formato float por lo que no se debe hacer cambio de formato. Como unicamente presenta 1 valor nulo, se decide eliminarlo"
      ],
      "metadata": {
        "id": "ETvdpleyLlnB"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces = voces.dropna(subset = [\"IQR\"])"
      ],
      "metadata": {
        "id": "nMDJLkK3LtXJ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"IQR\"].isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dYOkDKEDLwng",
        "outputId": "39b4738e-b1ec-4212-a676-efd50779ad1f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {},
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Variable sp.ent\n",
        "#La variable sp.ent está en formato float por lo que no se debe hacer cambio de formato de variable, como unicamente presenta un valor nulo, la decisiones es eliminarlo"
      ],
      "metadata": {
        "id": "DLltoYJkL3pK"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces = voces.dropna(subset = [\"sp.ent\"])"
      ],
      "metadata": {
        "id": "wRWyX8k1Mgr5"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"sp.ent\"].isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nYp2m3v8Mkys",
        "outputId": "352f733a-f933-4c8c-cc46-37cb802905bd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Variable mode"
      ],
      "metadata": {
        "id": "WoxUKT_LMzd7"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces = voces.dropna(subset = [\"mode\"])"
      ],
      "metadata": {
        "id": "ZrtVS_-LNCpY"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"mode\"].isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "irmlv8tbNFwu",
        "outputId": "99d12a26-2221-4c69-d7c0-b700b5d7d4dd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"mode\"] = voces[\"mode\"].astype(\"float\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 311
        },
        "id": "OMQSdjUCNX5H",
        "outputId": "9ce1739c-7553-4126-e3d8-282d2ce045f9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "ValueError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-30-b83410fa44d6>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mvoces\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"mode\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvoces\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"mode\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"float\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m   5813\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5814\u001b[0m             \u001b[0;31m# else, only a single dtype is given\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5815\u001b[0;31m             \u001b[0mnew_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_mgr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   5816\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_constructor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_data\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__finalize__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"astype\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5817\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    416\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    417\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mT\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mbool\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mstr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"raise\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mT\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 418\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"astype\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    419\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    420\u001b[0m     def convert(\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mapply\u001b[0;34m(self, f, align_keys, ignore_failures, **kwargs)\u001b[0m\n\u001b[1;32m    325\u001b[0m                     \u001b[0mapplied\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mb\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    326\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 327\u001b[0;31m                     \u001b[0mapplied\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mb\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    328\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mTypeError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mNotImplementedError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    329\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mignore_failures\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/blocks.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    589\u001b[0m         \u001b[0mvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    590\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 591\u001b[0;31m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_array_safe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    592\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    593\u001b[0m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmaybe_coerce_values\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_values\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_array_safe\u001b[0;34m(values, dtype, copy, errors)\u001b[0m\n\u001b[1;32m   1307\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1308\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1309\u001b[0;31m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1310\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mValueError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1311\u001b[0m         \u001b[0;31m# e.g. astype_nansafe can fail on object-dtype of strings\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_array\u001b[0;34m(values, dtype, copy)\u001b[0m\n\u001b[1;32m   1255\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1256\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1257\u001b[0;31m         \u001b[0mvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_nansafe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1258\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1259\u001b[0m     \u001b[0;31m# in pandas we don't store numpy str dtypes, so convert to object\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_nansafe\u001b[0;34m(arr, dtype, copy, skipna)\u001b[0m\n\u001b[1;32m   1199\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mcopy\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mis_object_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mis_object_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1200\u001b[0m         \u001b[0;31m# Explicit copy, or required since NumPy can't view from / to object.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1201\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1202\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1203\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mValueError\u001b[0m: could not convert string to float: 'dfgf'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"mode\"] = voces[\"mode\"].str.replace(\"dfgf\", \"NaN\")"
      ],
      "metadata": {
        "id": "RjQgcXzKNb_j"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"mode\"] = voces[\"mode\"].astype(\"float\")"
      ],
      "metadata": {
        "id": "d-YkGHKHNfq6"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Se elimina el único valor nulo de la variable mode\n",
        "voces = voces.dropna(subset = [\"mode\"])"
      ],
      "metadata": {
        "id": "PfA0wELdNjx9"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"mode\"].isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7AKi-otBNnwa",
        "outputId": "f52c8d34-4f8e-4992-a3f0-90b546bf355d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {},
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#La variable mode ya no presenta datos nulos"
      ],
      "metadata": {
        "id": "LBzawFRxNro3"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"centroid\"] = voces[\"centroid\"].astype(\"float\") "
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 311
        },
        "id": "feydWY-iNxdd",
        "outputId": "99434c3c-31b4-4125-8d50-62f5b7b092ae"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "ValueError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-37-b4939b36172b>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mvoces\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"centroid\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvoces\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"centroid\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"float\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m   5813\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5814\u001b[0m             \u001b[0;31m# else, only a single dtype is given\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5815\u001b[0;31m             \u001b[0mnew_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_mgr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   5816\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_constructor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_data\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__finalize__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"astype\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5817\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    416\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    417\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mT\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mbool\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mstr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"raise\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mT\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 418\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"astype\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    419\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    420\u001b[0m     def convert(\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mapply\u001b[0;34m(self, f, align_keys, ignore_failures, **kwargs)\u001b[0m\n\u001b[1;32m    325\u001b[0m                     \u001b[0mapplied\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mb\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    326\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 327\u001b[0;31m                     \u001b[0mapplied\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mb\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    328\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mTypeError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mNotImplementedError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    329\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mignore_failures\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/blocks.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    589\u001b[0m         \u001b[0mvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    590\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 591\u001b[0;31m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_array_safe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    592\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    593\u001b[0m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmaybe_coerce_values\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_values\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_array_safe\u001b[0;34m(values, dtype, copy, errors)\u001b[0m\n\u001b[1;32m   1307\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1308\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1309\u001b[0;31m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1310\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mValueError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1311\u001b[0m         \u001b[0;31m# e.g. astype_nansafe can fail on object-dtype of strings\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_array\u001b[0;34m(values, dtype, copy)\u001b[0m\n\u001b[1;32m   1255\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1256\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1257\u001b[0;31m         \u001b[0mvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_nansafe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1258\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1259\u001b[0m     \u001b[0;31m# in pandas we don't store numpy str dtypes, so convert to object\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_nansafe\u001b[0;34m(arr, dtype, copy, skipna)\u001b[0m\n\u001b[1;32m   1199\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mcopy\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mis_object_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mis_object_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1200\u001b[0m         \u001b[0;31m# Explicit copy, or required since NumPy can't view from / to object.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1201\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1202\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1203\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mValueError\u001b[0m: could not convert string to float: 'fgf'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"centroid\"] = voces[\"centroid\"].str.replace(\"fgf\", \"NaN\")"
      ],
      "metadata": {
        "id": "B1P6ry3GN5G0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"centroid\"] = voces[\"centroid\"].astype(\"float\")"
      ],
      "metadata": {
        "id": "tNOVQI94N9FZ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"centroid\"].isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YJSAfTRrOAQz",
        "outputId": "f49d794f-c8ea-4de4-e153-d0f724f42414"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1"
            ]
          },
          "metadata": {},
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "voces = voces.dropna(subset = [\"centroid\"])"
      ],
      "metadata": {
        "id": "soQ1-Dc4OG7B"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"centroid\"].isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FA6jX_D0OKEh",
        "outputId": "d52946ec-9bd4-47c7-d0c9-21d4a390ccd3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {},
          "execution_count": 42
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Se eliminó el valor nulo que aparecía luego de cambiarla a float64."
      ],
      "metadata": {
        "id": "ZoY0z38QOTXj"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Variable meanfun\n",
        "#La variable meanfun no presenta valores nulos, pero si debemos hacer el cambio de formato de object a float"
      ],
      "metadata": {
        "id": "9YJAGrp8OZg3"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"meanfun\"] = voces[\"meanfun\"].astype(\"float\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 311
        },
        "id": "4FQrwH99OgNI",
        "outputId": "e12dc413-c51e-475f-939f-08125b95f64d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "ValueError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-45-ee76b47b6349>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mvoces\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"meanfun\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvoces\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"meanfun\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"float\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m   5813\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5814\u001b[0m             \u001b[0;31m# else, only a single dtype is given\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5815\u001b[0;31m             \u001b[0mnew_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_mgr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   5816\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_constructor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_data\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__finalize__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"astype\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5817\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    416\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    417\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mT\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mbool\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mstr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"raise\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mT\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 418\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"astype\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    419\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    420\u001b[0m     def convert(\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mapply\u001b[0;34m(self, f, align_keys, ignore_failures, **kwargs)\u001b[0m\n\u001b[1;32m    325\u001b[0m                     \u001b[0mapplied\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mb\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    326\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 327\u001b[0;31m                     \u001b[0mapplied\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mb\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    328\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mTypeError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mNotImplementedError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    329\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mignore_failures\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/blocks.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    589\u001b[0m         \u001b[0mvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    590\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 591\u001b[0;31m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_array_safe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    592\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    593\u001b[0m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmaybe_coerce_values\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_values\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_array_safe\u001b[0;34m(values, dtype, copy, errors)\u001b[0m\n\u001b[1;32m   1307\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1308\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1309\u001b[0;31m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1310\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mValueError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1311\u001b[0m         \u001b[0;31m# e.g. astype_nansafe can fail on object-dtype of strings\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_array\u001b[0;34m(values, dtype, copy)\u001b[0m\n\u001b[1;32m   1255\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1256\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1257\u001b[0;31m         \u001b[0mvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_nansafe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1258\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1259\u001b[0m     \u001b[0;31m# in pandas we don't store numpy str dtypes, so convert to object\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_nansafe\u001b[0;34m(arr, dtype, copy, skipna)\u001b[0m\n\u001b[1;32m   1199\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mcopy\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mis_object_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mis_object_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1200\u001b[0m         \u001b[0;31m# Explicit copy, or required since NumPy can't view from / to object.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1201\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1202\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1203\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mValueError\u001b[0m: could not convert string to float: 'dfdf'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"meanfun\"] = voces[\"meanfun\"].str.replace(\"dfdf\", \"NaN\")"
      ],
      "metadata": {
        "id": "EL1ljKccOkNZ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"meanfun\"] = voces[\"meanfun\"].astype(\"float\")"
      ],
      "metadata": {
        "id": "J89-9KB3Oo0P"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"meanfun\"] = voces[\"meanfun\"].str.replace(\"NaNf\", \"NaN\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 311
        },
        "id": "Y5H1Zj0VOsDh",
        "outputId": "2b3d94ef-e82b-4625-8ff1-a7699c943231"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "AttributeError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-48-e2429cf0ac11>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mvoces\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"meanfun\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvoces\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"meanfun\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreplace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"NaNf\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"NaN\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m__getattr__\u001b[0;34m(self, name)\u001b[0m\n\u001b[1;32m   5485\u001b[0m         ):\n\u001b[1;32m   5486\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5487\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mobject\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__getattribute__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   5488\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5489\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__setattr__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/accessor.py\u001b[0m in \u001b[0;36m__get__\u001b[0;34m(self, obj, cls)\u001b[0m\n\u001b[1;32m    179\u001b[0m             \u001b[0;31m# we're accessing the attribute of the class, i.e., Dataset.geo\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    180\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_accessor\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 181\u001b[0;31m         \u001b[0maccessor_obj\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_accessor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    182\u001b[0m         \u001b[0;31m# Replace the property with the accessor object. Inspired by:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    183\u001b[0m         \u001b[0;31m# https://www.pydanny.com/cached-property.html\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/strings/accessor.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, data)\u001b[0m\n\u001b[1;32m    166\u001b[0m         \u001b[0;32mfrom\u001b[0m \u001b[0mpandas\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcore\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marrays\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstring_\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mStringDtype\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    167\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 168\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_inferred_dtype\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_validate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    169\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_is_categorical\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mis_categorical_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    170\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_is_string\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mStringDtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/strings/accessor.py\u001b[0m in \u001b[0;36m_validate\u001b[0;34m(data)\u001b[0m\n\u001b[1;32m    223\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    224\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0minferred_dtype\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mallowed_types\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 225\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mAttributeError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Can only use .str accessor with string values!\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    226\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0minferred_dtype\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    227\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mAttributeError\u001b[0m: Can only use .str accessor with string values!"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"meanfun\"] = voces[\"meanfun\"].astype(\"float\")"
      ],
      "metadata": {
        "id": "rfnF0I0XOv3H"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"meanfun\"].isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qgnS3WEEOz0q",
        "outputId": "a6826ef5-df77-40f0-a400-a35d219ed08e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1"
            ]
          },
          "metadata": {},
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "voces = voces.dropna(subset = [\"meanfun\"])"
      ],
      "metadata": {
        "id": "ff_aFV6EPAE0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"meanfun\"].isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Pk79qFZ8PEmS",
        "outputId": "27d225e7-545e-421f-f041-a4db33962978"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {},
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Variable minfun\n",
        "#La variable minfun no contiene valores nulos, pero si debemos hacer el cambio de formato de object a float"
      ],
      "metadata": {
        "id": "NJN1jI_uPS3_"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"minfun\"] = voces[\"minfun\"].astype(\"float\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 311
        },
        "id": "jv71nzFAPkQB",
        "outputId": "ee726561-0517-49ae-a02a-aae30a6bc13d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "ValueError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-54-52eb5283bb96>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mvoces\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"minfun\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvoces\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"minfun\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"float\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m   5813\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5814\u001b[0m             \u001b[0;31m# else, only a single dtype is given\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5815\u001b[0;31m             \u001b[0mnew_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_mgr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   5816\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_constructor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_data\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__finalize__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"astype\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5817\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    416\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    417\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mT\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mbool\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mstr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"raise\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mT\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 418\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"astype\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    419\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    420\u001b[0m     def convert(\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mapply\u001b[0;34m(self, f, align_keys, ignore_failures, **kwargs)\u001b[0m\n\u001b[1;32m    325\u001b[0m                     \u001b[0mapplied\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mb\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    326\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 327\u001b[0;31m                     \u001b[0mapplied\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mb\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    328\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mTypeError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mNotImplementedError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    329\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mignore_failures\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/blocks.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    589\u001b[0m         \u001b[0mvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    590\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 591\u001b[0;31m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_array_safe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    592\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    593\u001b[0m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmaybe_coerce_values\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_values\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_array_safe\u001b[0;34m(values, dtype, copy, errors)\u001b[0m\n\u001b[1;32m   1307\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1308\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1309\u001b[0;31m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1310\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mValueError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1311\u001b[0m         \u001b[0;31m# e.g. astype_nansafe can fail on object-dtype of strings\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_array\u001b[0;34m(values, dtype, copy)\u001b[0m\n\u001b[1;32m   1255\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1256\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1257\u001b[0;31m         \u001b[0mvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_nansafe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1258\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1259\u001b[0m     \u001b[0;31m# in pandas we don't store numpy str dtypes, so convert to object\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_nansafe\u001b[0;34m(arr, dtype, copy, skipna)\u001b[0m\n\u001b[1;32m   1199\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mcopy\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mis_object_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mis_object_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1200\u001b[0m         \u001b[0;31m# Explicit copy, or required since NumPy can't view from / to object.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1201\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1202\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1203\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mValueError\u001b[0m: could not convert string to float: 'dfdd'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"minfun\"] = voces[\"minfun\"].str.replace(\"dfdd\", \"NaN\")"
      ],
      "metadata": {
        "id": "Hi7av87vPolN"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"minfun\"] = voces[\"minfun\"].astype(\"float\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 311
        },
        "id": "YRY7OkbcPsVE",
        "outputId": "9ac7f230-fca2-42a3-c66f-c6014848096a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "ValueError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-56-52eb5283bb96>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mvoces\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"minfun\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvoces\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"minfun\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"float\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m   5813\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5814\u001b[0m             \u001b[0;31m# else, only a single dtype is given\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5815\u001b[0;31m             \u001b[0mnew_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_mgr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   5816\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_constructor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_data\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__finalize__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"astype\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5817\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    416\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    417\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mT\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mbool\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mstr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"raise\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mT\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 418\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"astype\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    419\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    420\u001b[0m     def convert(\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mapply\u001b[0;34m(self, f, align_keys, ignore_failures, **kwargs)\u001b[0m\n\u001b[1;32m    325\u001b[0m                     \u001b[0mapplied\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mb\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    326\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 327\u001b[0;31m                     \u001b[0mapplied\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mb\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    328\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mTypeError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mNotImplementedError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    329\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mignore_failures\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/blocks.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    589\u001b[0m         \u001b[0mvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    590\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 591\u001b[0;31m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_array_safe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    592\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    593\u001b[0m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmaybe_coerce_values\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_values\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_array_safe\u001b[0;34m(values, dtype, copy, errors)\u001b[0m\n\u001b[1;32m   1307\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1308\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1309\u001b[0;31m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1310\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mValueError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1311\u001b[0m         \u001b[0;31m# e.g. astype_nansafe can fail on object-dtype of strings\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_array\u001b[0;34m(values, dtype, copy)\u001b[0m\n\u001b[1;32m   1255\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1256\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1257\u001b[0;31m         \u001b[0mvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_nansafe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1258\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1259\u001b[0m     \u001b[0;31m# in pandas we don't store numpy str dtypes, so convert to object\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_nansafe\u001b[0;34m(arr, dtype, copy, skipna)\u001b[0m\n\u001b[1;32m   1199\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mcopy\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mis_object_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mis_object_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1200\u001b[0m         \u001b[0;31m# Explicit copy, or required since NumPy can't view from / to object.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1201\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1202\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1203\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mValueError\u001b[0m: could not convert string to float: 'dfdf'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"minfun\"] = voces[\"minfun\"].str.replace(\"dfdf\", \"NaN\")"
      ],
      "metadata": {
        "id": "rXaAeRvVPxD1"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"minfun\"] = voces[\"minfun\"].astype(\"float\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 311
        },
        "id": "S4wHo2eOP1Kg",
        "outputId": "90817a83-848f-42de-b18e-f55bc2672127"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "ValueError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-58-52eb5283bb96>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mvoces\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"minfun\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvoces\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"minfun\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"float\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m   5813\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5814\u001b[0m             \u001b[0;31m# else, only a single dtype is given\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5815\u001b[0;31m             \u001b[0mnew_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_mgr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   5816\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_constructor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_data\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__finalize__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"astype\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5817\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    416\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    417\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mT\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mbool\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mstr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"raise\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mT\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 418\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"astype\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    419\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    420\u001b[0m     def convert(\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mapply\u001b[0;34m(self, f, align_keys, ignore_failures, **kwargs)\u001b[0m\n\u001b[1;32m    325\u001b[0m                     \u001b[0mapplied\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mb\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    326\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 327\u001b[0;31m                     \u001b[0mapplied\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mb\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    328\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mTypeError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mNotImplementedError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    329\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mignore_failures\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/blocks.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    589\u001b[0m         \u001b[0mvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    590\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 591\u001b[0;31m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_array_safe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    592\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    593\u001b[0m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmaybe_coerce_values\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_values\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_array_safe\u001b[0;34m(values, dtype, copy, errors)\u001b[0m\n\u001b[1;32m   1307\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1308\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1309\u001b[0;31m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1310\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mValueError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1311\u001b[0m         \u001b[0;31m# e.g. astype_nansafe can fail on object-dtype of strings\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_array\u001b[0;34m(values, dtype, copy)\u001b[0m\n\u001b[1;32m   1255\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1256\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1257\u001b[0;31m         \u001b[0mvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_nansafe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1258\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1259\u001b[0m     \u001b[0;31m# in pandas we don't store numpy str dtypes, so convert to object\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_nansafe\u001b[0;34m(arr, dtype, copy, skipna)\u001b[0m\n\u001b[1;32m   1199\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mcopy\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mis_object_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mis_object_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1200\u001b[0m         \u001b[0;31m# Explicit copy, or required since NumPy can't view from / to object.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1201\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1202\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1203\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mValueError\u001b[0m: could not convert string to float: 'gh'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"minfun\"] = voces[\"minfun\"].str.replace(\"gh\", \"NaN\")"
      ],
      "metadata": {
        "id": "9C7-YXBXP5PD"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"minfun\"] = voces[\"minfun\"].astype(\"float\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 311
        },
        "id": "16CLnkeFP84d",
        "outputId": "79542bea-ec86-47d4-9653-d14628d93586"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "ValueError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-60-52eb5283bb96>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mvoces\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"minfun\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvoces\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"minfun\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"float\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m   5813\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5814\u001b[0m             \u001b[0;31m# else, only a single dtype is given\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5815\u001b[0;31m             \u001b[0mnew_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_mgr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   5816\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_constructor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_data\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__finalize__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"astype\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5817\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    416\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    417\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mT\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mbool\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mstr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"raise\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mT\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 418\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"astype\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    419\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    420\u001b[0m     def convert(\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mapply\u001b[0;34m(self, f, align_keys, ignore_failures, **kwargs)\u001b[0m\n\u001b[1;32m    325\u001b[0m                     \u001b[0mapplied\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mb\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    326\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 327\u001b[0;31m                     \u001b[0mapplied\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mb\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    328\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mTypeError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mNotImplementedError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    329\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mignore_failures\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/blocks.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    589\u001b[0m         \u001b[0mvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    590\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 591\u001b[0;31m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_array_safe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    592\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    593\u001b[0m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmaybe_coerce_values\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_values\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_array_safe\u001b[0;34m(values, dtype, copy, errors)\u001b[0m\n\u001b[1;32m   1307\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1308\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1309\u001b[0;31m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1310\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mValueError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1311\u001b[0m         \u001b[0;31m# e.g. astype_nansafe can fail on object-dtype of strings\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_array\u001b[0;34m(values, dtype, copy)\u001b[0m\n\u001b[1;32m   1255\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1256\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1257\u001b[0;31m         \u001b[0mvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_nansafe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1258\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1259\u001b[0m     \u001b[0;31m# in pandas we don't store numpy str dtypes, so convert to object\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_nansafe\u001b[0;34m(arr, dtype, copy, skipna)\u001b[0m\n\u001b[1;32m   1199\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mcopy\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mis_object_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mis_object_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1200\u001b[0m         \u001b[0;31m# Explicit copy, or required since NumPy can't view from / to object.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1201\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1202\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1203\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mValueError\u001b[0m: could not convert string to float: 'hj'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"minfun\"] = voces[\"minfun\"].str.replace(\"hj\", \"NaN\")"
      ],
      "metadata": {
        "id": "1Q3bUc9BQAmY"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"minfun\"] = voces[\"minfun\"].astype(\"float\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 311
        },
        "id": "GGgadonfQDxo",
        "outputId": "906b6b0f-1542-4e96-eea6-439488d98a9a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "ValueError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-62-52eb5283bb96>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mvoces\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"minfun\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvoces\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"minfun\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"float\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m   5813\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5814\u001b[0m             \u001b[0;31m# else, only a single dtype is given\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5815\u001b[0;31m             \u001b[0mnew_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_mgr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   5816\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_constructor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_data\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__finalize__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"astype\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5817\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    416\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    417\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mT\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mbool\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mstr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"raise\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mT\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 418\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"astype\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    419\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    420\u001b[0m     def convert(\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mapply\u001b[0;34m(self, f, align_keys, ignore_failures, **kwargs)\u001b[0m\n\u001b[1;32m    325\u001b[0m                     \u001b[0mapplied\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mb\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    326\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 327\u001b[0;31m                     \u001b[0mapplied\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mb\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    328\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mTypeError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mNotImplementedError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    329\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mignore_failures\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/blocks.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    589\u001b[0m         \u001b[0mvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    590\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 591\u001b[0;31m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_array_safe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    592\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    593\u001b[0m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmaybe_coerce_values\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_values\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_array_safe\u001b[0;34m(values, dtype, copy, errors)\u001b[0m\n\u001b[1;32m   1307\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1308\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1309\u001b[0;31m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1310\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mValueError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1311\u001b[0m         \u001b[0;31m# e.g. astype_nansafe can fail on object-dtype of strings\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_array\u001b[0;34m(values, dtype, copy)\u001b[0m\n\u001b[1;32m   1255\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1256\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1257\u001b[0;31m         \u001b[0mvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_nansafe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1258\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1259\u001b[0m     \u001b[0;31m# in pandas we don't store numpy str dtypes, so convert to object\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_nansafe\u001b[0;34m(arr, dtype, copy, skipna)\u001b[0m\n\u001b[1;32m   1199\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mcopy\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mis_object_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mis_object_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1200\u001b[0m         \u001b[0;31m# Explicit copy, or required since NumPy can't view from / to object.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1201\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1202\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1203\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mValueError\u001b[0m: could not convert string to float: 'j'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"minfun\"] = voces[\"minfun\"].str.replace(\"j\", \"NaN\")"
      ],
      "metadata": {
        "id": "bQztSk1JQHlr"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"minfun\"] = voces[\"minfun\"].astype(\"float\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 311
        },
        "id": "_HM9IpbOQLZF",
        "outputId": "dc53d169-8d8e-44f5-f77e-983a9d665639"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "ValueError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-64-52eb5283bb96>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mvoces\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"minfun\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvoces\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"minfun\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"float\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m   5813\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5814\u001b[0m             \u001b[0;31m# else, only a single dtype is given\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5815\u001b[0;31m             \u001b[0mnew_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_mgr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   5816\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_constructor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_data\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__finalize__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"astype\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5817\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    416\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    417\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mT\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mbool\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mstr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"raise\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mT\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 418\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"astype\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    419\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    420\u001b[0m     def convert(\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mapply\u001b[0;34m(self, f, align_keys, ignore_failures, **kwargs)\u001b[0m\n\u001b[1;32m    325\u001b[0m                     \u001b[0mapplied\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mb\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    326\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 327\u001b[0;31m                     \u001b[0mapplied\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mb\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    328\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mTypeError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mNotImplementedError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    329\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mignore_failures\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/blocks.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    589\u001b[0m         \u001b[0mvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    590\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 591\u001b[0;31m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_array_safe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    592\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    593\u001b[0m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmaybe_coerce_values\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_values\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_array_safe\u001b[0;34m(values, dtype, copy, errors)\u001b[0m\n\u001b[1;32m   1307\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1308\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1309\u001b[0;31m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1310\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mValueError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1311\u001b[0m         \u001b[0;31m# e.g. astype_nansafe can fail on object-dtype of strings\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_array\u001b[0;34m(values, dtype, copy)\u001b[0m\n\u001b[1;32m   1255\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1256\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1257\u001b[0;31m         \u001b[0mvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_nansafe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1258\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1259\u001b[0m     \u001b[0;31m# in pandas we don't store numpy str dtypes, so convert to object\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_nansafe\u001b[0;34m(arr, dtype, copy, skipna)\u001b[0m\n\u001b[1;32m   1199\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mcopy\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mis_object_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mis_object_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1200\u001b[0m         \u001b[0;31m# Explicit copy, or required since NumPy can't view from / to object.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1201\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1202\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1203\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mValueError\u001b[0m: could not convert string to float: 'NaNk'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"minfun\"] = voces[\"minfun\"].str.replace(\"NaNk\", \"NaN\")"
      ],
      "metadata": {
        "id": "1EP-d8O3QPu-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"minfun\"] = voces[\"minfun\"].astype(\"float\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 311
        },
        "id": "GxImtsq-QTDM",
        "outputId": "4eab19a8-a811-4ae7-c0ec-ca3d907a2ecb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "ValueError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-66-52eb5283bb96>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mvoces\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"minfun\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvoces\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"minfun\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"float\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m   5813\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5814\u001b[0m             \u001b[0;31m# else, only a single dtype is given\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5815\u001b[0;31m             \u001b[0mnew_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_mgr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   5816\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_constructor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_data\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__finalize__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"astype\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5817\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    416\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    417\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mT\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mbool\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mstr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"raise\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mT\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 418\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"astype\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    419\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    420\u001b[0m     def convert(\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mapply\u001b[0;34m(self, f, align_keys, ignore_failures, **kwargs)\u001b[0m\n\u001b[1;32m    325\u001b[0m                     \u001b[0mapplied\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mb\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    326\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 327\u001b[0;31m                     \u001b[0mapplied\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mb\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    328\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mTypeError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mNotImplementedError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    329\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mignore_failures\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/blocks.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    589\u001b[0m         \u001b[0mvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    590\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 591\u001b[0;31m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_array_safe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    592\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    593\u001b[0m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmaybe_coerce_values\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_values\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_array_safe\u001b[0;34m(values, dtype, copy, errors)\u001b[0m\n\u001b[1;32m   1307\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1308\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1309\u001b[0;31m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1310\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mValueError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1311\u001b[0m         \u001b[0;31m# e.g. astype_nansafe can fail on object-dtype of strings\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_array\u001b[0;34m(values, dtype, copy)\u001b[0m\n\u001b[1;32m   1255\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1256\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1257\u001b[0;31m         \u001b[0mvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_nansafe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1258\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1259\u001b[0m     \u001b[0;31m# in pandas we don't store numpy str dtypes, so convert to object\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_nansafe\u001b[0;34m(arr, dtype, copy, skipna)\u001b[0m\n\u001b[1;32m   1199\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mcopy\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mis_object_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mis_object_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1200\u001b[0m         \u001b[0;31m# Explicit copy, or required since NumPy can't view from / to object.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1201\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1202\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1203\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mValueError\u001b[0m: could not convert string to float: 'NaNlk'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"minfun\"] = voces[\"minfun\"].str.replace(\"NaN1k\", \"NaN\")"
      ],
      "metadata": {
        "id": "AXL86zw-QXNW"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"minfun\"] = voces[\"minfun\"].astype(\"float\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 311
        },
        "id": "FOTQsh2sQadq",
        "outputId": "3d54cd3f-3233-4f7c-e1fa-54b111a1c1aa"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "ValueError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-68-52eb5283bb96>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mvoces\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"minfun\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvoces\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"minfun\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"float\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m   5813\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5814\u001b[0m             \u001b[0;31m# else, only a single dtype is given\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5815\u001b[0;31m             \u001b[0mnew_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_mgr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   5816\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_constructor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_data\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__finalize__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"astype\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5817\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    416\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    417\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mT\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mbool\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mstr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"raise\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mT\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 418\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"astype\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    419\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    420\u001b[0m     def convert(\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mapply\u001b[0;34m(self, f, align_keys, ignore_failures, **kwargs)\u001b[0m\n\u001b[1;32m    325\u001b[0m                     \u001b[0mapplied\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mb\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    326\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 327\u001b[0;31m                     \u001b[0mapplied\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mb\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    328\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mTypeError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mNotImplementedError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    329\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mignore_failures\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/blocks.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    589\u001b[0m         \u001b[0mvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    590\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 591\u001b[0;31m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_array_safe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    592\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    593\u001b[0m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmaybe_coerce_values\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_values\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_array_safe\u001b[0;34m(values, dtype, copy, errors)\u001b[0m\n\u001b[1;32m   1307\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1308\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1309\u001b[0;31m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1310\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mValueError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1311\u001b[0m         \u001b[0;31m# e.g. astype_nansafe can fail on object-dtype of strings\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_array\u001b[0;34m(values, dtype, copy)\u001b[0m\n\u001b[1;32m   1255\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1256\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1257\u001b[0;31m         \u001b[0mvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_nansafe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1258\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1259\u001b[0m     \u001b[0;31m# in pandas we don't store numpy str dtypes, so convert to object\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_nansafe\u001b[0;34m(arr, dtype, copy, skipna)\u001b[0m\n\u001b[1;32m   1199\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mcopy\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mis_object_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mis_object_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1200\u001b[0m         \u001b[0;31m# Explicit copy, or required since NumPy can't view from / to object.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1201\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1202\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1203\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mValueError\u001b[0m: could not convert string to float: 'NaNlk'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"minfun\"] = voces[\"minfun\"].str.replace(\"NaNlk\", \"NaN\")"
      ],
      "metadata": {
        "id": "q8VRHcBtQjPe"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"minfun\"] = voces[\"minfun\"].astype(\"float\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 311
        },
        "id": "ztsq9FoXQnRb",
        "outputId": "7f71eeb2-c965-483e-c39f-e992bd141993"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "ValueError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-70-52eb5283bb96>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mvoces\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"minfun\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvoces\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"minfun\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"float\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m   5813\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5814\u001b[0m             \u001b[0;31m# else, only a single dtype is given\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5815\u001b[0;31m             \u001b[0mnew_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_mgr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   5816\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_constructor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_data\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__finalize__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"astype\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5817\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    416\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    417\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mT\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mbool\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mstr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"raise\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mT\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 418\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"astype\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    419\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    420\u001b[0m     def convert(\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mapply\u001b[0;34m(self, f, align_keys, ignore_failures, **kwargs)\u001b[0m\n\u001b[1;32m    325\u001b[0m                     \u001b[0mapplied\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mb\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    326\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 327\u001b[0;31m                     \u001b[0mapplied\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mb\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    328\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mTypeError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mNotImplementedError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    329\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mignore_failures\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/blocks.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    589\u001b[0m         \u001b[0mvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    590\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 591\u001b[0;31m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_array_safe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    592\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    593\u001b[0m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmaybe_coerce_values\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_values\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_array_safe\u001b[0;34m(values, dtype, copy, errors)\u001b[0m\n\u001b[1;32m   1307\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1308\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1309\u001b[0;31m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1310\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mValueError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1311\u001b[0m         \u001b[0;31m# e.g. astype_nansafe can fail on object-dtype of strings\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_array\u001b[0;34m(values, dtype, copy)\u001b[0m\n\u001b[1;32m   1255\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1256\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1257\u001b[0;31m         \u001b[0mvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_nansafe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1258\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1259\u001b[0m     \u001b[0;31m# in pandas we don't store numpy str dtypes, so convert to object\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_nansafe\u001b[0;34m(arr, dtype, copy, skipna)\u001b[0m\n\u001b[1;32m   1199\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mcopy\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mis_object_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mis_object_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1200\u001b[0m         \u001b[0;31m# Explicit copy, or required since NumPy can't view from / to object.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1201\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1202\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1203\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mValueError\u001b[0m: could not convert string to float: 'df'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"minfun\"] = voces[\"minfun\"].str.replace(\"df\", \"NaN\")"
      ],
      "metadata": {
        "id": "f8mijkjWQrmZ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"minfun\"] = voces[\"minfun\"].astype(\"float\")"
      ],
      "metadata": {
        "id": "G3-dlbkbQunp"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"meanfun\"].isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QmiCbQfWQ079",
        "outputId": "c05196fe-6185-41de-bc4a-e5d44684d85b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {},
          "execution_count": 73
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Variable maxfun\n",
        "#La variable maxfun no contiene valores nulos, pero si debemos hacer el cambio de variable de object a float"
      ],
      "metadata": {
        "id": "3ZQyW7mnRayT"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"maxfun\"] = voces[\"maxfun\"].astype(\"float\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 311
        },
        "id": "UdzYQTjVRfiB",
        "outputId": "5f1f0556-d251-43e3-88ef-e2283b67bc55"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "ValueError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-75-3f0e27df6708>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mvoces\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"maxfun\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvoces\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"maxfun\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"float\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m   5813\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5814\u001b[0m             \u001b[0;31m# else, only a single dtype is given\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5815\u001b[0;31m             \u001b[0mnew_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_mgr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   5816\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_constructor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_data\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__finalize__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"astype\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5817\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    416\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    417\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mT\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mbool\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mstr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"raise\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mT\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 418\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"astype\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    419\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    420\u001b[0m     def convert(\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mapply\u001b[0;34m(self, f, align_keys, ignore_failures, **kwargs)\u001b[0m\n\u001b[1;32m    325\u001b[0m                     \u001b[0mapplied\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mb\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    326\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 327\u001b[0;31m                     \u001b[0mapplied\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mb\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    328\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mTypeError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mNotImplementedError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    329\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mignore_failures\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/blocks.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    589\u001b[0m         \u001b[0mvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    590\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 591\u001b[0;31m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_array_safe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    592\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    593\u001b[0m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmaybe_coerce_values\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_values\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_array_safe\u001b[0;34m(values, dtype, copy, errors)\u001b[0m\n\u001b[1;32m   1307\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1308\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1309\u001b[0;31m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1310\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mValueError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1311\u001b[0m         \u001b[0;31m# e.g. astype_nansafe can fail on object-dtype of strings\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_array\u001b[0;34m(values, dtype, copy)\u001b[0m\n\u001b[1;32m   1255\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1256\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1257\u001b[0;31m         \u001b[0mvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_nansafe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1258\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1259\u001b[0m     \u001b[0;31m# in pandas we don't store numpy str dtypes, so convert to object\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/dtypes/cast.py\u001b[0m in \u001b[0;36mastype_nansafe\u001b[0;34m(arr, dtype, copy, skipna)\u001b[0m\n\u001b[1;32m   1199\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mcopy\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mis_object_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mis_object_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1200\u001b[0m         \u001b[0;31m# Explicit copy, or required since NumPy can't view from / to object.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1201\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1202\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1203\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mValueError\u001b[0m: could not convert string to float: 'dfd'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"maxfun\"] = voces[\"maxfun\"].str.replace(\"dfd\", \"NaN\")"
      ],
      "metadata": {
        "id": "wrBt3cdIRj_q"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"maxfun\"] = voces[\"maxfun\"].astype(\"float\")"
      ],
      "metadata": {
        "id": "0gKbR4HBRnU9"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces = voces.dropna(subset = [\"maxfun\"])"
      ],
      "metadata": {
        "id": "G94RFG39RrPQ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Variable genero"
      ],
      "metadata": {
        "id": "mPl_p2HFRwod"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces = voces.dropna(subset = [\"genero\"])"
      ],
      "metadata": {
        "id": "fwBr-5hRSkxS"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces[\"genero\"].isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qEmKXABeStnO",
        "outputId": "4aa4388d-5e06-43ff-abe1-c6b6ed5ea215"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {},
          "execution_count": 82
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Se eliminan las variables sucias creando un nuevo dateframe, el cual llamaremos voces1"
      ],
      "metadata": {
        "id": "pBFek63TW_F-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1 = voces[['meanfreq', 'sd', 'median', 'Q25', 'Q75', 'IQR', 'sp.ent', 'sfm', 'mode', 'centroid', 'meanfun', 'minfun', 'maxfun', 'mindom', 'modindx', 'genero']]"
      ],
      "metadata": {
        "id": "7T8s1aB2g4ni"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(voces1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "x8fwcLi-y7-u",
        "outputId": "a05bd127-4fa7-4309-dd37-091c85a397a7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "      meanfreq        sd    median       Q25       Q75       IQR    sp.ent  \\\n",
            "0     0.059781  0.064241  0.032027  0.015071  0.090193  0.075122  0.893369   \n",
            "1     0.066009  0.067310  0.040229  0.019414  0.092666  0.073252  0.892193   \n",
            "2     0.077316  0.083829  0.036718  0.008701  0.131908  0.123207  0.846389   \n",
            "3     0.151228  0.072111  0.158011  0.096582  0.207955  0.111374  0.963322   \n",
            "4     0.135120  0.079146  0.124656  0.078720  0.206045  0.127325  0.971955   \n",
            "...        ...       ...       ...       ...       ...       ...       ...   \n",
            "3163  0.131884  0.084734  0.153707  0.049285  0.201144  0.151859  0.962934   \n",
            "3164  0.116221  0.089221  0.076758  0.042718  0.204911  0.162193  0.960716   \n",
            "3165  0.142056  0.095798  0.183731  0.033424  0.224360  0.190936  0.946854   \n",
            "3166  0.143659  0.090628  0.184976  0.043508  0.219943  0.176435  0.950436   \n",
            "3167  0.165509  0.092884  0.183044  0.070072  0.250827  0.180756  0.938829   \n",
            "\n",
            "           sfm      mode  centroid   meanfun    minfun    maxfun    mindom  \\\n",
            "0     0.491918  0.000000  0.059781  0.084279  0.015702  0.275862  0.007812   \n",
            "1     0.513724  0.000000  0.066009  0.107937  0.015826  0.250000  0.007812   \n",
            "2     0.478905  0.000000  0.077316  0.098706  0.015656  0.271186  0.007812   \n",
            "3     0.727232  0.083878  0.151228  0.088965  0.017798  0.250000  0.007812   \n",
            "4     0.783568  0.104261  0.135120  0.106398  0.016931  0.266667  0.007812   \n",
            "...        ...       ...       ...       ...       ...       ...       ...   \n",
            "3163  0.763182  0.200836  0.131884  0.182790  0.083770  0.262295  0.007812   \n",
            "3164  0.709570  0.013683  0.116221  0.188980  0.034409  0.275862  0.039062   \n",
            "3165  0.654196  0.008006  0.142056  0.209918  0.039506  0.275862  0.007812   \n",
            "3166  0.675470  0.212202  0.143659  0.172375  0.034483  0.250000  0.007812   \n",
            "3167  0.601529  0.267702  0.165509  0.185607  0.062257  0.271186  0.007812   \n",
            "\n",
            "       modindx     genero  \n",
            "0     0.000000  Masculino  \n",
            "1     0.052632  Masculino  \n",
            "2     0.046512  Masculino  \n",
            "3     0.247119  Masculino  \n",
            "4     0.208274  Masculino  \n",
            "...        ...        ...  \n",
            "3163  0.161929   Femenino  \n",
            "3164  0.277897   Femenino  \n",
            "3165  0.194759   Femenino  \n",
            "3166  0.311002   Femenino  \n",
            "3167  0.350000   Femenino  \n",
            "\n",
            "[3153 rows x 16 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "voces1.dtypes"
      ],
      "metadata": {
        "id": "RKATTFD53vAH",
        "outputId": "27a648b7-ce5a-449e-fe1e-d44763130f15",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "meanfreq    float64\n",
              "sd          float64\n",
              "median      float64\n",
              "Q25         float64\n",
              "Q75         float64\n",
              "IQR         float64\n",
              "sp.ent      float64\n",
              "sfm         float64\n",
              "mode        float64\n",
              "centroid    float64\n",
              "meanfun     float64\n",
              "minfun      float64\n",
              "maxfun      float64\n",
              "mindom      float64\n",
              "modindx     float64\n",
              "genero       object\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 86
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "voces1.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gXRwjGhz4HkM",
        "outputId": "56d284c2-0209-4f75-ea52-9721ca1c3461"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "meanfreq     0\n",
              "sd           0\n",
              "median       0\n",
              "Q25          0\n",
              "Q75          0\n",
              "IQR          0\n",
              "sp.ent       0\n",
              "sfm          0\n",
              "mode         0\n",
              "centroid     0\n",
              "meanfun      0\n",
              "minfun      11\n",
              "maxfun       0\n",
              "mindom       0\n",
              "modindx      0\n",
              "genero       0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 87
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "voces1 = voces1.dropna(subset = [\"minfun\"])"
      ],
      "metadata": {
        "id": "e-USAG1p4WNz"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Vhtkb9Jr4fkR",
        "outputId": "28b2bc5b-47f6-4764-9411-61e89de24de9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "meanfreq    0\n",
              "sd          0\n",
              "median      0\n",
              "Q25         0\n",
              "Q75         0\n",
              "IQR         0\n",
              "sp.ent      0\n",
              "sfm         0\n",
              "mode        0\n",
              "centroid    0\n",
              "meanfun     0\n",
              "minfun      0\n",
              "maxfun      0\n",
              "mindom      0\n",
              "modindx     0\n",
              "genero      0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 89
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Análisis Exploratorio de Datos"
      ],
      "metadata": {
        "id": "OF8p3cSEFBiW"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Exploración general utilizando la funcion describe"
      ],
      "metadata": {
        "id": "KoOPk067idRR"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "66N4nZ17FbE2",
        "outputId": "32dd20f9-a17a-460e-fd9c-14187fc689be"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          meanfreq           sd       median          Q25          Q75  \\\n",
              "count  3142.000000  3142.000000  3142.000000  3142.000000  3142.000000   \n",
              "mean      0.181062     0.057052     0.185809     0.140725     0.224809   \n",
              "std       0.029890     0.016670     0.036290     0.048698     0.023624   \n",
              "min       0.039363     0.018363     0.010975     0.000229     0.042946   \n",
              "25%       0.163757     0.041787     0.169752     0.111324     0.208777   \n",
              "50%       0.184890     0.059103     0.190082     0.140558     0.225710   \n",
              "75%       0.199257     0.066925     0.210716     0.176140     0.243650   \n",
              "max       0.251124     0.115273     0.261224     0.247347     0.273469   \n",
              "\n",
              "               IQR       sp.ent          sfm         mode     centroid  \\\n",
              "count  3142.000000  3142.000000  3142.000000  3142.000000  3142.000000   \n",
              "mean      0.084084     0.894787     0.407247     0.165371     0.181062   \n",
              "std       0.042840     0.044956     0.176861     0.077042     0.029890   \n",
              "min       0.014558     0.738651     0.036876     0.000000     0.039363   \n",
              "25%       0.042291     0.861602     0.257678     0.118231     0.163757   \n",
              "50%       0.093988     0.901262     0.395403     0.186599     0.184890   \n",
              "75%       0.114068     0.928079     0.531712     0.221047     0.199257   \n",
              "max       0.252225     0.981997     0.842936     0.280000     0.251124   \n",
              "\n",
              "           meanfun       minfun       maxfun       mindom      modindx  \n",
              "count  3142.000000  3142.000000  3142.000000  3142.000000  3142.000000  \n",
              "mean      0.143059     0.036925     0.258905     0.052603     0.173538  \n",
              "std       0.032292     0.019231     0.030349     0.063268     0.119727  \n",
              "min       0.055565     0.009775     0.000000     0.004883     0.000000  \n",
              "25%       0.117284     0.018265     0.253968     0.007812     0.099587  \n",
              "50%       0.141258     0.046921     0.271186     0.023438     0.139122  \n",
              "75%       0.169721     0.047940     0.277457     0.070312     0.208729  \n",
              "max       0.237636     0.204082     0.279114     0.458984     0.932374  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-80be2ecf-0abf-4f55-92d6-faaac8fc6c5d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>meanfreq</th>\n",
              "      <th>sd</th>\n",
              "      <th>median</th>\n",
              "      <th>Q25</th>\n",
              "      <th>Q75</th>\n",
              "      <th>IQR</th>\n",
              "      <th>sp.ent</th>\n",
              "      <th>sfm</th>\n",
              "      <th>mode</th>\n",
              "      <th>centroid</th>\n",
              "      <th>meanfun</th>\n",
              "      <th>minfun</th>\n",
              "      <th>maxfun</th>\n",
              "      <th>mindom</th>\n",
              "      <th>modindx</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>3142.000000</td>\n",
              "      <td>3142.000000</td>\n",
              "      <td>3142.000000</td>\n",
              "      <td>3142.000000</td>\n",
              "      <td>3142.000000</td>\n",
              "      <td>3142.000000</td>\n",
              "      <td>3142.000000</td>\n",
              "      <td>3142.000000</td>\n",
              "      <td>3142.000000</td>\n",
              "      <td>3142.000000</td>\n",
              "      <td>3142.000000</td>\n",
              "      <td>3142.000000</td>\n",
              "      <td>3142.000000</td>\n",
              "      <td>3142.000000</td>\n",
              "      <td>3142.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>0.181062</td>\n",
              "      <td>0.057052</td>\n",
              "      <td>0.185809</td>\n",
              "      <td>0.140725</td>\n",
              "      <td>0.224809</td>\n",
              "      <td>0.084084</td>\n",
              "      <td>0.894787</td>\n",
              "      <td>0.407247</td>\n",
              "      <td>0.165371</td>\n",
              "      <td>0.181062</td>\n",
              "      <td>0.143059</td>\n",
              "      <td>0.036925</td>\n",
              "      <td>0.258905</td>\n",
              "      <td>0.052603</td>\n",
              "      <td>0.173538</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>0.029890</td>\n",
              "      <td>0.016670</td>\n",
              "      <td>0.036290</td>\n",
              "      <td>0.048698</td>\n",
              "      <td>0.023624</td>\n",
              "      <td>0.042840</td>\n",
              "      <td>0.044956</td>\n",
              "      <td>0.176861</td>\n",
              "      <td>0.077042</td>\n",
              "      <td>0.029890</td>\n",
              "      <td>0.032292</td>\n",
              "      <td>0.019231</td>\n",
              "      <td>0.030349</td>\n",
              "      <td>0.063268</td>\n",
              "      <td>0.119727</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.039363</td>\n",
              "      <td>0.018363</td>\n",
              "      <td>0.010975</td>\n",
              "      <td>0.000229</td>\n",
              "      <td>0.042946</td>\n",
              "      <td>0.014558</td>\n",
              "      <td>0.738651</td>\n",
              "      <td>0.036876</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.039363</td>\n",
              "      <td>0.055565</td>\n",
              "      <td>0.009775</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.004883</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>0.163757</td>\n",
              "      <td>0.041787</td>\n",
              "      <td>0.169752</td>\n",
              "      <td>0.111324</td>\n",
              "      <td>0.208777</td>\n",
              "      <td>0.042291</td>\n",
              "      <td>0.861602</td>\n",
              "      <td>0.257678</td>\n",
              "      <td>0.118231</td>\n",
              "      <td>0.163757</td>\n",
              "      <td>0.117284</td>\n",
              "      <td>0.018265</td>\n",
              "      <td>0.253968</td>\n",
              "      <td>0.007812</td>\n",
              "      <td>0.099587</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>0.184890</td>\n",
              "      <td>0.059103</td>\n",
              "      <td>0.190082</td>\n",
              "      <td>0.140558</td>\n",
              "      <td>0.225710</td>\n",
              "      <td>0.093988</td>\n",
              "      <td>0.901262</td>\n",
              "      <td>0.395403</td>\n",
              "      <td>0.186599</td>\n",
              "      <td>0.184890</td>\n",
              "      <td>0.141258</td>\n",
              "      <td>0.046921</td>\n",
              "      <td>0.271186</td>\n",
              "      <td>0.023438</td>\n",
              "      <td>0.139122</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>0.199257</td>\n",
              "      <td>0.066925</td>\n",
              "      <td>0.210716</td>\n",
              "      <td>0.176140</td>\n",
              "      <td>0.243650</td>\n",
              "      <td>0.114068</td>\n",
              "      <td>0.928079</td>\n",
              "      <td>0.531712</td>\n",
              "      <td>0.221047</td>\n",
              "      <td>0.199257</td>\n",
              "      <td>0.169721</td>\n",
              "      <td>0.047940</td>\n",
              "      <td>0.277457</td>\n",
              "      <td>0.070312</td>\n",
              "      <td>0.208729</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>0.251124</td>\n",
              "      <td>0.115273</td>\n",
              "      <td>0.261224</td>\n",
              "      <td>0.247347</td>\n",
              "      <td>0.273469</td>\n",
              "      <td>0.252225</td>\n",
              "      <td>0.981997</td>\n",
              "      <td>0.842936</td>\n",
              "      <td>0.280000</td>\n",
              "      <td>0.251124</td>\n",
              "      <td>0.237636</td>\n",
              "      <td>0.204082</td>\n",
              "      <td>0.279114</td>\n",
              "      <td>0.458984</td>\n",
              "      <td>0.932374</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-80be2ecf-0abf-4f55-92d6-faaac8fc6c5d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-80be2ecf-0abf-4f55-92d6-faaac8fc6c5d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-80be2ecf-0abf-4f55-92d6-faaac8fc6c5d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 92
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Mediante la funcion describe pudieron explorarse de manera general los valores minimos, maximos, los cuartiles, el promedio y la desviación estandar de las diferentes variables"
      ],
      "metadata": {
        "id": "aAbNbTyqbq2g"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Exploración detallada por variable de los estadísticos no detallados mediante la función describe"
      ],
      "metadata": {
        "id": "3jO2QEVAijss"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Variable meanfreq"
      ],
      "metadata": {
        "id": "YZavuq2tjTJV"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"meanfreq\"].mode()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NM6Z6Tp9jn-t",
        "outputId": "512f3daa-e2e4-4f9e-8534-f386a51c2e65"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    0.212190\n",
              "1    0.213732\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 96
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Para la variable meanfrq hay dos modas, los valores que se repiten más vece son 0.212190 y 0.213732"
      ],
      "metadata": {
        "id": "xFp0NPBmjx8c"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"meanfreq\"].median()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8toRkxmykLym",
        "outputId": "ae5932ab-ed36-4a5b-f9cf-25dcf99d0cbe"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.184889596028036"
            ]
          },
          "metadata": {},
          "execution_count": 98
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Para la variable meanfreq, el 50% de los valores son menores o iguales a 0.18 y el 50%, mayores o iguales a 0.18"
      ],
      "metadata": {
        "id": "pzNbs-eFkPWt"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"meanfreq\"].mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "L-UbBMnDkSSr",
        "outputId": "f3009483-c6bd-4df4-c593-9c0840be813f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.1810617388080249"
            ]
          },
          "metadata": {},
          "execution_count": 100
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#En promedio, la frecuencia media es de 0.180993 Khz"
      ],
      "metadata": {
        "id": "gLXpwGDxkWyO"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"meanfreq\"].hist()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "y8mx7hudkajJ",
        "outputId": "ac373cf9-624c-48ba-e7bb-1004c6803857"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#El histograma muestra una ligera asimetría hacia la izquierda, no muestra una distribución normal. El pico de los datos puede observarse en el valor 0.20."
      ],
      "metadata": {
        "id": "JLgYTjfGkiWI"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Variable sd"
      ],
      "metadata": {
        "id": "FoBDZkuakxFF"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"sd\"].mode()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7PDju4RFkzhO",
        "outputId": "e89d501b-9e48-480f-a191-32914c340922"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    0.043190\n",
              "1    0.057705\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 105
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Para la variable sd existen dos modas, 0.043190 y 0.057705, estos son los valores que más se repiten"
      ],
      "metadata": {
        "id": "HdOS3aXXk4-0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"sd\"].median()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vIi0hTEJk8_X",
        "outputId": "7f0ce40a-d0a5-4063-efc8-92665b159cc2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.05910304141986255"
            ]
          },
          "metadata": {},
          "execution_count": 107
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Para la variable sd, el 50% de los valores son iguales o menores que 0.0591 y el otro 50% de los valores, son mayores o iguales que 0.0591"
      ],
      "metadata": {
        "id": "xTvrh_E-lD-_"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"sd\"].mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uqUnz4NRlHQ3",
        "outputId": "35abbc03-350e-4f0d-d0c5-1f2808bbb349"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.05705172872779618"
            ]
          },
          "metadata": {},
          "execution_count": 109
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#En promedio, la desviación estandar de la frecuencia es de 0.0571"
      ],
      "metadata": {
        "id": "5JSI5M7zlKFz"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"sd\"].hist()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "u2YJR1kqlYBw",
        "outputId": "246c831b-1fd4-45c9-ab07-b8ec49daad87"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Este histograma no muestra una distribución normal, en el mismo pueden identificarse dos modas"
      ],
      "metadata": {
        "id": "mTcdx7t9lfsp"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Variable median"
      ],
      "metadata": {
        "id": "NH-Rq0oYllqB"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"median\"].mode()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gy9UTtj_lwnW",
        "outputId": "51f0234c-8abe-447a-dd8a-b15df17f6946"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    0.186667\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 114
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#El valor que más se repite en la variable median es 0.1866"
      ],
      "metadata": {
        "id": "I0UyS19rl0_E"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"median\"].median()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8R9t9Gj6l3yc",
        "outputId": "eb26242b-d3e9-4ae2-9d86-4e0de84dd4be"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.190082040020175"
            ]
          },
          "metadata": {},
          "execution_count": 116
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Para la variable median, el 50% de los datos son menores o iguales que 0.1900 y el otro 50% de los datos son mayores o iguales que 0.1900"
      ],
      "metadata": {
        "id": "wqKJHSFrl6sU"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"median\"].mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OyIx80HWl94T",
        "outputId": "4d718153-3c93-41eb-d348-e79433561d71"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.18580900731890682"
            ]
          },
          "metadata": {},
          "execution_count": 118
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#En promedio, la frecuencia media es de 0.1856"
      ],
      "metadata": {
        "id": "405_W4VfmBmf"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"median\"].hist()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "crjPd64RmE1Z",
        "outputId": "1bdef4dd-64d5-4a99-d9d1-0a3612e5c0f5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#El histograma no muestra una distribución normal, presenta asimetría hacia la izquierda, el pico de los datos puede ubicarse cerca del valor 0.20"
      ],
      "metadata": {
        "id": "ZtxjB4Z5mJKX"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Variable Q25"
      ],
      "metadata": {
        "id": "X7wGMBwUmNq1"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"Q25\"].mode()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XDfPrh2rmTUR",
        "outputId": "3ae91b19-0a74-4fc0-c359-4f25d24d3441"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    0.14\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 123
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#El valor de la variable Q25 que más se repite es 0.14"
      ],
      "metadata": {
        "id": "GmMxBUHnmWql"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"Q25\"].median()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "S8_pj39rmaAp",
        "outputId": "df8497d6-a84a-4ec5-e549-898c09c43cf2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.1405581145914"
            ]
          },
          "metadata": {},
          "execution_count": 125
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Para la variable Q25, el 50% de los datos son menores o iguales que 0.1403 y el otro 50%, son mayores o iguales que 0.1403"
      ],
      "metadata": {
        "id": "HYAERlVbmdNh"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"Q25\"].hist()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "N6hKaLpgmgwm",
        "outputId": "5a5e1778-e8c3-48e1-cbd3-68654a567b6e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Este histograma se aproxima más a tener una distribución simétrica, similar a la forma de una campana de Gauss, aproixmándose a una distribución normal"
      ],
      "metadata": {
        "id": "YRGOAlwCmlE-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Variable Q75"
      ],
      "metadata": {
        "id": "gZhA45IAmo-8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"Q75\"].mode()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "B6u7jJIEmtUl",
        "outputId": "200fd235-c799-44e2-8b9c-1def36db42de"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    0.240000\n",
              "1    0.241818\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 130
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#La variable Q75 tiene dos modas, los valores que más se repiten son: 0.2400 y 0.2418"
      ],
      "metadata": {
        "id": "m1SF6xCMnq2f"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"Q75\"].median()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Q0peqnuOnuJ7",
        "outputId": "0f0f10c1-4dd0-4ea7-ed4c-b413e66add33"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.2257102809600035"
            ]
          },
          "metadata": {},
          "execution_count": 132
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Para la variable Q75, el 50% de los datos son menores o iguales que 0.2257 y el 50% de los datos son mayores o iguales a 0.2257"
      ],
      "metadata": {
        "id": "_ZthEi51nxtP"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"Q75\"].mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sbrIxg51n0pO",
        "outputId": "4a939817-f541-43ec-ac75-f64138cc15a1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.2248087007871109"
            ]
          },
          "metadata": {},
          "execution_count": 134
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#En promedio, el valor del tercer cuantil es de 0.2247"
      ],
      "metadata": {
        "id": "XJ3Fs3NHn3nQ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"Q75\"].hist()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "9bTe013Tn8xE",
        "outputId": "ab26e1f4-c3f8-4bba-bb58-3d7c46fa3abe"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#El histograma muestra una fuerte asimetria hacia la izquierda no muestra una distribución normal, el mismo muestra varios valores atípicos."
      ],
      "metadata": {
        "id": "NxQ0WSm3oBaP"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Variable IQR"
      ],
      "metadata": {
        "id": "cuJpVQKHoFOh"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"IQR\"].mode()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JII3R3AHoaei",
        "outputId": "f231f11a-7bf0-48ee-e780-2e5096e00816"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    0.035000\n",
              "1    0.043077\n",
              "2    0.105000\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 139
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Para la variable IQR hay tres modas, los valores que más se repiten son: 0.0350, 0.0430 y 0.1050"
      ],
      "metadata": {
        "id": "jGm05Uzxoeen"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"IQR\"].median()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "k_HfvcfZoiM8",
        "outputId": "fae95cce-1e6a-4207-b990-61d0b09f58d5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.09398795180722891"
            ]
          },
          "metadata": {},
          "execution_count": 141
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Para la variable IQR, el 50% de los valores son menores o iguales a 0.0941 y el otro 50% de los valores es mayor o igual a 0.0941"
      ],
      "metadata": {
        "id": "w-XwbqPnomKM"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"IQR\"].mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YsJcussTopa_",
        "outputId": "16cf3dc8-bb8f-4e2e-88fb-5cfce00dfb8f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.08408397796196429"
            ]
          },
          "metadata": {},
          "execution_count": 143
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#En promedio, el valor del rango intercuantílico es de 0.0842"
      ],
      "metadata": {
        "id": "vNQ-1ssmotSC"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"IQR\"].hist()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "ynVWCZe7ow-h",
        "outputId": "772ed61b-e2e4-4331-c6fb-6cc5cc87dee6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#El histograma no muestra una distribución normal, el mismo presenta una distribución multimodal, así como algunos valores atípicos"
      ],
      "metadata": {
        "id": "_j9l_zDLo4XZ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Variable sp.ent"
      ],
      "metadata": {
        "id": "SamoBZMxrP1p"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"sp.ent\"].mode()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "b7wN5okprTK5",
        "outputId": "9427ac6f-1280-4587-e708-dc17f4280eb3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    0.859712\n",
              "1    0.877669\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 148
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#La variable sp.ent cuenta con dos modas, los valores que más se repiten son: 0.8597 y 0.8776"
      ],
      "metadata": {
        "id": "EGFr24sDrZ2u"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"sp.ent\"].median()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wawGYONXrdL0",
        "outputId": "bdb24e1d-3b32-4a74-8c8c-be9bbc38b78e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.901261614075143"
            ]
          },
          "metadata": {},
          "execution_count": 150
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Para la variable sp.ent, el 50% de los datos son menores o iguales que 0.9016 y el otro 50% son mayores o iguales que 0.9016"
      ],
      "metadata": {
        "id": "DQJwJ0vKrgoR"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"sp.ent\"].mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OlWNeHM6rnxT",
        "outputId": "3d79eef5-3077-4f2c-a0d5-3af101437ad0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.8947873975940492"
            ]
          },
          "metadata": {},
          "execution_count": 152
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#En promedio, la entropía espectral es de 0.895052"
      ],
      "metadata": {
        "id": "sTJL5cXErsMr"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"sp.ent\"].hist()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "GZdohZRdrvs6",
        "outputId": "ae33b1ba-2c81-4820-8b9f-cb83fd89ba94"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Este histograma no muestra una distribución normal, muestra cierta asimetría hacia la izquierda, el pico de los datos puede ubicarse cerca del valor 0.93"
      ],
      "metadata": {
        "id": "TbmW1kBmr2xe"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Variable sfm"
      ],
      "metadata": {
        "id": "9dkp4q6vr6Q5"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"sfm\"].mode()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ColU8yKEr9A3",
        "outputId": "927b7236-ac8e-4103-de8c-8914eeda69a6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    0.084934\n",
              "1    0.314398\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 157
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#La variable sfm tiene dos modas, los valores que más se repiten son: 0.0849 y 0.3143"
      ],
      "metadata": {
        "id": "W1xVeqrksCpf"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"sfm\"].median()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NiiOFiHYsF1-",
        "outputId": "ce67a600-b109-498c-dc48-c2306b328c9c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.3954032731922305"
            ]
          },
          "metadata": {},
          "execution_count": 159
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Para la variable sfm, el 50% de los datos son menores o iguales que 0.3960 y el otro 50% de los datos son mayores o iguales que 0.3960"
      ],
      "metadata": {
        "id": "-2FC7id2sJaM"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"sfm\"].mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MVjiIJ5jsMt7",
        "outputId": "51dffc1e-e6b3-43a1-c243-6f1b9f10ccd1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.40724689769088507"
            ]
          },
          "metadata": {},
          "execution_count": 161
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#En promedio, la planitud espectral es de 0.4079"
      ],
      "metadata": {
        "id": "6nMgYeHrsQSE"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"sfm\"].hist()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "sz5KUU02sT8E",
        "outputId": "e9a0cb8f-9166-4e98-b680-3dabffdab8cd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Este histograma es multimodal, no muestra una distribución normal, la dispersión de los datos va desde alrededor de 0.05 hasta 0.85"
      ],
      "metadata": {
        "id": "DmKnsRxqsYQm"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Variable mode"
      ],
      "metadata": {
        "id": "JZ_oYI4UsoDx"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"mode\"].mode()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QXoqFC4osrl6",
        "outputId": "6d7a7eed-5a25-4b51-a88f-837f677b2be6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    0.0\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 166
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#El valor que más se repite es 0"
      ],
      "metadata": {
        "id": "a2Ujo8Yus5-X"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"mode\"].median()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "o2p_WwXTs8ZG",
        "outputId": "3c8684de-1483-4a8a-e27c-f32401094a78"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.1865986394557825"
            ]
          },
          "metadata": {},
          "execution_count": 168
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Para la variable mode, el 50% de los datos son menores o iguales que 0.1865 y el otro 50% de los datos son mayores o iguales que 0.1865"
      ],
      "metadata": {
        "id": "Ulu8lrROtBJJ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"mode\"].mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ixmw5rlUtKK5",
        "outputId": "2231d989-2f04-4134-a5ab-ad770c5d0c65"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.16537078235978162"
            ]
          },
          "metadata": {},
          "execution_count": 170
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#En promedio, mode frequency es de 0.1654"
      ],
      "metadata": {
        "id": "tKSSTcTPtQMc"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"mode\"].hist()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "-EqxqlOJtkLo",
        "outputId": "18dabbbb-22ef-4e20-b94a-cf72303588d3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#El histograma no muestra una distribucion normal, muestra picos de datos cerca de los valores 0 y 0.21, o sea, el multimodal"
      ],
      "metadata": {
        "id": "7JwQXpmZtuHl"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Variable centroid"
      ],
      "metadata": {
        "id": "kMYraI9ht9jS"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"centroid\"].mode()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8qxseWvGuNtB",
        "outputId": "cc782781-413c-4855-dfb5-528893f2678e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    0.212190\n",
              "1    0.213732\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 175
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#La variable centroid muestra dos modas, los valores que más se repiten son: 0.2121 y 0.2137"
      ],
      "metadata": {
        "id": "AYAB2UwouSrU"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"centroid\"].median()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zHAshbgeubNZ",
        "outputId": "4d847c1f-6fe8-4c47-acf4-d5991e338217"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.184889596028036"
            ]
          },
          "metadata": {},
          "execution_count": 177
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Para la variable centroid, el 50% de los datos son menores o iguales que 0.1848 y el otro 50% de los datos son mayores o iguales que 0.1843"
      ],
      "metadata": {
        "id": "OVnYJSdguirG"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"centroid\"].mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TaHOJGRLuvxY",
        "outputId": "02acee41-01c4-4f22-9d54-a1b2304e516d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.1810617388080249"
            ]
          },
          "metadata": {},
          "execution_count": 179
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#En promedio, centroide es de 0.180993 Hz"
      ],
      "metadata": {
        "id": "0hTW6my2ttOh"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"centroid\"].hist()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "yMQCuxKJu1n9",
        "outputId": "a021e2b8-4ac2-491a-94f0-d882df167189"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Este histograma muestra cierta tendencia hacia la izquierda, pueden observarse algunos valores atípicos cerca del 0.05"
      ],
      "metadata": {
        "id": "VG-ToOm4vDBb"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Variable meanfun"
      ],
      "metadata": {
        "id": "ht0wbCbxvNjF"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"meanfun\"].mode()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "b0ALUPCHvTsr",
        "outputId": "fdfec554-ff83-4a9c-eacf-26c8dc84d7a7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    0.133667\n",
              "1    0.139942\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 184
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#La variable meanfun muestra dos modas, los valores que mas se repiten son: 0.1336 y 0.1399"
      ],
      "metadata": {
        "id": "5pmZI9fJv0_i"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"meanfun\"].median()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "yF1iDon6v8Q-",
        "outputId": "445f2fcb-d656-4d4f-a1e5-bd549efb7395"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.1412584181372035"
            ]
          },
          "metadata": {},
          "execution_count": 186
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Para la variable meanfun, el 50% de los datos son menores o iguales que 0.1405 y el otro 50% de los datos son mayores o iguales que 0.1405"
      ],
      "metadata": {
        "id": "MxCe8qtPwCVp"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"meanfun\"].mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iyWpFMlewM_4",
        "outputId": "f6d5d3fb-3f02-4be9-e127-b4d2fa8dfde3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.14305861791889968"
            ]
          },
          "metadata": {},
          "execution_count": 188
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#En promedio, la variable meanfun es de 0.1428"
      ],
      "metadata": {
        "id": "tP6cC8AEwTmA"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"meanfun\"].hist()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "RsNcfLouwbOC",
        "outputId": "c4ae7d60-a378-4240-d319-2f0ac2b0b3ab"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Este histograma es multimodal, se observar dos modas cerca de los valores 0.125 y 0.175"
      ],
      "metadata": {
        "id": "tbbCECFNww-M"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Variable minfun"
      ],
      "metadata": {
        "id": "a29omA8rxDlY"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"minfun\"].mode()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qtMpWiRCxG3M",
        "outputId": "b2d51945-9627-4651-abce-7bfe3123f5ef"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    0.046921\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 193
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#El valor que más se repite en la variable minfun es 0.0469"
      ],
      "metadata": {
        "id": "0iSRmkCMxU66"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"minfun\"].median()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cGU9UGAsxcj1",
        "outputId": "2d655bc7-2055-4388-bebb-a2452d68a087"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.0469208211143695"
            ]
          },
          "metadata": {},
          "execution_count": 195
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Para la variable minfun, el 50% de los datos son menores o iguales que 0.0469 y el otro 50% de los datos son mayores o iguales que 0.046"
      ],
      "metadata": {
        "id": "ySCH-JzTxg_g"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"minfun\"].mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6CM1zvMwxuQW",
        "outputId": "c01d6dca-c064-4612-f94a-c15b1d29defd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.0369245399603777"
            ]
          },
          "metadata": {},
          "execution_count": 197
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#En promedio, el valor de la variable minfun es de 0.0369"
      ],
      "metadata": {
        "id": "mhd-pZPvxzxk"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"minfun\"].hist()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "NsRJYv1ux9dA",
        "outputId": "b0f0e5f2-5f95-466b-e960-c3dc68865fde"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#El histograma no muestra una distribucion normal, muestra dos picos con fuerte tendencia hacia la derecha y con varios valores atípicos"
      ],
      "metadata": {
        "id": "NN_fa007yKkp"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Variable maxfun"
      ],
      "metadata": {
        "id": "DfXtD8MSyW1N"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"maxfun\"].mode()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZaUDPU6HydCf",
        "outputId": "a3ed4644-cef5-4d0c-a524-407626d98491"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    0.27907\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 202
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#El valor que más se repite para la variable maxfun es 0.2790"
      ],
      "metadata": {
        "id": "AsgDiaOYyix1"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"maxfun\"].median()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "53MGdC5FypIV",
        "outputId": "b7ed0dc8-e846-4917-ca8e-bda93c346610"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.271186440677966"
            ]
          },
          "metadata": {},
          "execution_count": 204
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Para la variable maxfun, el 50% de los datos son menores o iguales que 0.2711 y el otro 50% de los datos son mayores o iguales que 0.2711"
      ],
      "metadata": {
        "id": "aKN6w9ijyvxQ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"maxfun\"].mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UKnlMUjOy4wm",
        "outputId": "c363cc30-7377-4a6a-bb79-9bd98a46dd18"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.25890510170433556"
            ]
          },
          "metadata": {},
          "execution_count": 206
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#En promedio, el valor de la variable maxfun es de 0.2588"
      ],
      "metadata": {
        "id": "H35mwPfpzEQp"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"maxfun\"].hist()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "PqbytZACzLnN",
        "outputId": "b33743ab-c4c5-413d-994f-d43f0a5af8bc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Este histograma no muestra una distribucion normal, tiene una fuerte tendencia hacia la izquierda, con varios valores atípicos"
      ],
      "metadata": {
        "id": "eWpp-13lzc3t"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Variable mindom"
      ],
      "metadata": {
        "id": "YlJvCDf108Xy"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"mindom\"].mode()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Eha2reRV1BP6",
        "outputId": "5bcf7bcf-dfc0-4504-8a83-308523123bde"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    0.023438\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 211
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#El valor que más se repite para la variable mindom es de 0.0234"
      ],
      "metadata": {
        "id": "clj9ZUqY1HN_"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"mindom\"].median()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ul2sg9oz1O2D",
        "outputId": "b8dfd9b2-8539-430d-9354-dd609da95aa0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.0234375"
            ]
          },
          "metadata": {},
          "execution_count": 213
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Para la variable mindom, el 50% de los datos son menores o iguales que 0.0234 y el otro 50% de los datos son mayores o iguales que 0.0234"
      ],
      "metadata": {
        "id": "ZkBoNoLc1UmK"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"mindom\"].mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kLEC19rk1rYw",
        "outputId": "5b969992-9c20-470b-bacc-f0b64d152fd2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.0526028094665022"
            ]
          },
          "metadata": {},
          "execution_count": 215
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#En promedio, el valor de mindom es de 0.0526"
      ],
      "metadata": {
        "id": "FocKvSbZ14am"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"mindom\"].hist()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "IJfVyysC2Agf",
        "outputId": "2145b30e-dec9-4ea4-fc1f-afffaf9e27a9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#El histograma no muestra una distribución normal, muestra una fuerte tendencia hacia la derecha, con un pico pronunciado cerca del valor 0.0"
      ],
      "metadata": {
        "id": "Yoemytpk2HBK"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Variable modindx"
      ],
      "metadata": {
        "id": "ZdMo_l5z4_k2"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"modindx\"].mode()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1XoHLCVK5GfG",
        "outputId": "abaae235-dc35-4a4d-d117-b7da13da2ee5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    0.0\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 220
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#El valor que más se repite en la variable modindx es 0"
      ],
      "metadata": {
        "id": "43ZSoAtm5Lov"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"modindx\"].median()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Z6biEalD5h6y",
        "outputId": "d01ae42e-a1d3-4c8f-a9ef-4f3afb5bd2cf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.1391221201996495"
            ]
          },
          "metadata": {},
          "execution_count": 222
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Para la variable modindx, el 50% de los datos son menores o iguales que 0.1393 y el otro 50% de los datos son mayores o iguales que 0.1393"
      ],
      "metadata": {
        "id": "4hCkov245ro0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"modindx\"].mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9Lynao-_53JR",
        "outputId": "010378e6-f59e-4e70-afa5-19d38b1f095e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.17353782632620343"
            ]
          },
          "metadata": {},
          "execution_count": 224
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#En promedio, el indice de modulación es de 0.1737"
      ],
      "metadata": {
        "id": "067ToiH557oI"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"modindx\"].hist()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 268
        },
        "id": "iyc3owpe6Erj",
        "outputId": "01908f28-2d8e-40ae-c5e6-2855c7e73f41"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Este histograma no muestra una distribucion normal, muestra uan fuerte tendencia hacia la derecha, con valores atípicos más allá del valor 0.8"
      ],
      "metadata": {
        "id": "pPSy9uwC6KGB"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Variable genero"
      ],
      "metadata": {
        "id": "JS9Lg-Pd6jil"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1[\"genero\"].mode()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cqxpizFS6mVk",
        "outputId": "567cbc69-662a-4617-ff71-3dce1e8c162e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    Femenino\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 229
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#La variable genero presenta como moda el femenino. O sea, es el que más se repite."
      ],
      "metadata": {
        "id": "zRvnYP_86tRG"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1.corr()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 520
        },
        "id": "dPnvIwPqFwwT",
        "outputId": "19bd947a-4f57-473c-dc04-fa457c401063"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          meanfreq        sd    median       Q25       Q75       IQR  \\\n",
              "meanfreq  1.000000 -0.739302  0.925043  0.911180  0.740077 -0.627664   \n",
              "sd       -0.739302  1.000000 -0.562368 -0.846914 -0.160208  0.874381   \n",
              "median    0.925043 -0.562368  1.000000  0.774221  0.730770 -0.477107   \n",
              "Q25       0.911180 -0.846914  0.774221  1.000000  0.475622 -0.874465   \n",
              "Q75       0.740077 -0.160208  0.730770  0.475622  1.000000  0.010793   \n",
              "IQR      -0.627664  0.874381 -0.477107 -0.874465  0.010793  1.000000   \n",
              "sp.ent   -0.599025  0.715795 -0.499232 -0.646043 -0.172011  0.639533   \n",
              "sfm      -0.784479  0.838371 -0.661272 -0.766731 -0.376949  0.663710   \n",
              "mode      0.687414 -0.530306  0.677649  0.590889  0.484131 -0.404716   \n",
              "centroid  1.000000 -0.739302  0.925043  0.911180  0.740077 -0.627664   \n",
              "meanfun   0.459147 -0.465527  0.413102  0.543587  0.153099 -0.533495   \n",
              "minfun    0.381856 -0.344575  0.335459  0.318282  0.256701 -0.220247   \n",
              "maxfun    0.276165 -0.126828  0.254185  0.199399  0.291590 -0.065868   \n",
              "mindom    0.227116 -0.359847  0.187518  0.302415 -0.029296 -0.359926   \n",
              "modindx  -0.217621  0.121064 -0.214186 -0.140783 -0.218935  0.039302   \n",
              "\n",
              "            sp.ent       sfm      mode  centroid   meanfun    minfun  \\\n",
              "meanfreq -0.599025 -0.784479  0.687414  1.000000  0.459147  0.381856   \n",
              "sd        0.715795  0.838371 -0.530306 -0.739302 -0.465527 -0.344575   \n",
              "median   -0.499232 -0.661272  0.677649  0.925043  0.413102  0.335459   \n",
              "Q25      -0.646043 -0.766731  0.590889  0.911180  0.543587  0.318282   \n",
              "Q75      -0.172011 -0.376949  0.484131  0.740077  0.153099  0.256701   \n",
              "IQR       0.639533  0.663710 -0.404716 -0.627664 -0.533495 -0.220247   \n",
              "sp.ent    1.000000  0.867420 -0.324412 -0.599025 -0.510370 -0.301925   \n",
              "sfm       0.867420  1.000000 -0.485791 -0.784479 -0.420333 -0.361500   \n",
              "mode     -0.324412 -0.485791  1.000000  0.687414  0.325422  0.386664   \n",
              "centroid -0.599025 -0.784479  0.687414  1.000000  0.459147  0.381856   \n",
              "meanfun  -0.510370 -0.420333  0.325422  0.459147  1.000000  0.335740   \n",
              "minfun   -0.301925 -0.361500  0.386664  0.381856  0.335740  1.000000   \n",
              "maxfun   -0.119572 -0.191066  0.181850  0.276165  0.310608  0.214830   \n",
              "mindom   -0.296050 -0.291020  0.193322  0.227116  0.163624  0.081733   \n",
              "modindx   0.197580  0.211310 -0.184624 -0.217621 -0.054014  0.002806   \n",
              "\n",
              "            maxfun    mindom   modindx  \n",
              "meanfreq  0.276165  0.227116 -0.217621  \n",
              "sd       -0.126828 -0.359847  0.121064  \n",
              "median    0.254185  0.187518 -0.214186  \n",
              "Q25       0.199399  0.302415 -0.140783  \n",
              "Q75       0.291590 -0.029296 -0.218935  \n",
              "IQR      -0.065868 -0.359926  0.039302  \n",
              "sp.ent   -0.119572 -0.296050  0.197580  \n",
              "sfm      -0.191066 -0.291020  0.211310  \n",
              "mode      0.181850  0.193322 -0.184624  \n",
              "centroid  0.276165  0.227116 -0.217621  \n",
              "meanfun   0.310608  0.163624 -0.054014  \n",
              "minfun    0.214830  0.081733  0.002806  \n",
              "maxfun    1.000000 -0.234729 -0.359695  \n",
              "mindom   -0.234729  1.000000  0.200502  \n",
              "modindx  -0.359695  0.200502  1.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-430877c3-4f57-460c-bb84-ca3c2703121f\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>meanfreq</th>\n",
              "      <th>sd</th>\n",
              "      <th>median</th>\n",
              "      <th>Q25</th>\n",
              "      <th>Q75</th>\n",
              "      <th>IQR</th>\n",
              "      <th>sp.ent</th>\n",
              "      <th>sfm</th>\n",
              "      <th>mode</th>\n",
              "      <th>centroid</th>\n",
              "      <th>meanfun</th>\n",
              "      <th>minfun</th>\n",
              "      <th>maxfun</th>\n",
              "      <th>mindom</th>\n",
              "      <th>modindx</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>meanfreq</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.739302</td>\n",
              "      <td>0.925043</td>\n",
              "      <td>0.911180</td>\n",
              "      <td>0.740077</td>\n",
              "      <td>-0.627664</td>\n",
              "      <td>-0.599025</td>\n",
              "      <td>-0.784479</td>\n",
              "      <td>0.687414</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.459147</td>\n",
              "      <td>0.381856</td>\n",
              "      <td>0.276165</td>\n",
              "      <td>0.227116</td>\n",
              "      <td>-0.217621</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>sd</th>\n",
              "      <td>-0.739302</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.562368</td>\n",
              "      <td>-0.846914</td>\n",
              "      <td>-0.160208</td>\n",
              "      <td>0.874381</td>\n",
              "      <td>0.715795</td>\n",
              "      <td>0.838371</td>\n",
              "      <td>-0.530306</td>\n",
              "      <td>-0.739302</td>\n",
              "      <td>-0.465527</td>\n",
              "      <td>-0.344575</td>\n",
              "      <td>-0.126828</td>\n",
              "      <td>-0.359847</td>\n",
              "      <td>0.121064</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>median</th>\n",
              "      <td>0.925043</td>\n",
              "      <td>-0.562368</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.774221</td>\n",
              "      <td>0.730770</td>\n",
              "      <td>-0.477107</td>\n",
              "      <td>-0.499232</td>\n",
              "      <td>-0.661272</td>\n",
              "      <td>0.677649</td>\n",
              "      <td>0.925043</td>\n",
              "      <td>0.413102</td>\n",
              "      <td>0.335459</td>\n",
              "      <td>0.254185</td>\n",
              "      <td>0.187518</td>\n",
              "      <td>-0.214186</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Q25</th>\n",
              "      <td>0.911180</td>\n",
              "      <td>-0.846914</td>\n",
              "      <td>0.774221</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.475622</td>\n",
              "      <td>-0.874465</td>\n",
              "      <td>-0.646043</td>\n",
              "      <td>-0.766731</td>\n",
              "      <td>0.590889</td>\n",
              "      <td>0.911180</td>\n",
              "      <td>0.543587</td>\n",
              "      <td>0.318282</td>\n",
              "      <td>0.199399</td>\n",
              "      <td>0.302415</td>\n",
              "      <td>-0.140783</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Q75</th>\n",
              "      <td>0.740077</td>\n",
              "      <td>-0.160208</td>\n",
              "      <td>0.730770</td>\n",
              "      <td>0.475622</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.010793</td>\n",
              "      <td>-0.172011</td>\n",
              "      <td>-0.376949</td>\n",
              "      <td>0.484131</td>\n",
              "      <td>0.740077</td>\n",
              "      <td>0.153099</td>\n",
              "      <td>0.256701</td>\n",
              "      <td>0.291590</td>\n",
              "      <td>-0.029296</td>\n",
              "      <td>-0.218935</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>IQR</th>\n",
              "      <td>-0.627664</td>\n",
              "      <td>0.874381</td>\n",
              "      <td>-0.477107</td>\n",
              "      <td>-0.874465</td>\n",
              "      <td>0.010793</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.639533</td>\n",
              "      <td>0.663710</td>\n",
              "      <td>-0.404716</td>\n",
              "      <td>-0.627664</td>\n",
              "      <td>-0.533495</td>\n",
              "      <td>-0.220247</td>\n",
              "      <td>-0.065868</td>\n",
              "      <td>-0.359926</td>\n",
              "      <td>0.039302</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>sp.ent</th>\n",
              "      <td>-0.599025</td>\n",
              "      <td>0.715795</td>\n",
              "      <td>-0.499232</td>\n",
              "      <td>-0.646043</td>\n",
              "      <td>-0.172011</td>\n",
              "      <td>0.639533</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.867420</td>\n",
              "      <td>-0.324412</td>\n",
              "      <td>-0.599025</td>\n",
              "      <td>-0.510370</td>\n",
              "      <td>-0.301925</td>\n",
              "      <td>-0.119572</td>\n",
              "      <td>-0.296050</td>\n",
              "      <td>0.197580</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>sfm</th>\n",
              "      <td>-0.784479</td>\n",
              "      <td>0.838371</td>\n",
              "      <td>-0.661272</td>\n",
              "      <td>-0.766731</td>\n",
              "      <td>-0.376949</td>\n",
              "      <td>0.663710</td>\n",
              "      <td>0.867420</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.485791</td>\n",
              "      <td>-0.784479</td>\n",
              "      <td>-0.420333</td>\n",
              "      <td>-0.361500</td>\n",
              "      <td>-0.191066</td>\n",
              "      <td>-0.291020</td>\n",
              "      <td>0.211310</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mode</th>\n",
              "      <td>0.687414</td>\n",
              "      <td>-0.530306</td>\n",
              "      <td>0.677649</td>\n",
              "      <td>0.590889</td>\n",
              "      <td>0.484131</td>\n",
              "      <td>-0.404716</td>\n",
              "      <td>-0.324412</td>\n",
              "      <td>-0.485791</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.687414</td>\n",
              "      <td>0.325422</td>\n",
              "      <td>0.386664</td>\n",
              "      <td>0.181850</td>\n",
              "      <td>0.193322</td>\n",
              "      <td>-0.184624</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>centroid</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.739302</td>\n",
              "      <td>0.925043</td>\n",
              "      <td>0.911180</td>\n",
              "      <td>0.740077</td>\n",
              "      <td>-0.627664</td>\n",
              "      <td>-0.599025</td>\n",
              "      <td>-0.784479</td>\n",
              "      <td>0.687414</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.459147</td>\n",
              "      <td>0.381856</td>\n",
              "      <td>0.276165</td>\n",
              "      <td>0.227116</td>\n",
              "      <td>-0.217621</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>meanfun</th>\n",
              "      <td>0.459147</td>\n",
              "      <td>-0.465527</td>\n",
              "      <td>0.413102</td>\n",
              "      <td>0.543587</td>\n",
              "      <td>0.153099</td>\n",
              "      <td>-0.533495</td>\n",
              "      <td>-0.510370</td>\n",
              "      <td>-0.420333</td>\n",
              "      <td>0.325422</td>\n",
              "      <td>0.459147</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.335740</td>\n",
              "      <td>0.310608</td>\n",
              "      <td>0.163624</td>\n",
              "      <td>-0.054014</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>minfun</th>\n",
              "      <td>0.381856</td>\n",
              "      <td>-0.344575</td>\n",
              "      <td>0.335459</td>\n",
              "      <td>0.318282</td>\n",
              "      <td>0.256701</td>\n",
              "      <td>-0.220247</td>\n",
              "      <td>-0.301925</td>\n",
              "      <td>-0.361500</td>\n",
              "      <td>0.386664</td>\n",
              "      <td>0.381856</td>\n",
              "      <td>0.335740</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.214830</td>\n",
              "      <td>0.081733</td>\n",
              "      <td>0.002806</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>maxfun</th>\n",
              "      <td>0.276165</td>\n",
              "      <td>-0.126828</td>\n",
              "      <td>0.254185</td>\n",
              "      <td>0.199399</td>\n",
              "      <td>0.291590</td>\n",
              "      <td>-0.065868</td>\n",
              "      <td>-0.119572</td>\n",
              "      <td>-0.191066</td>\n",
              "      <td>0.181850</td>\n",
              "      <td>0.276165</td>\n",
              "      <td>0.310608</td>\n",
              "      <td>0.214830</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.234729</td>\n",
              "      <td>-0.359695</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mindom</th>\n",
              "      <td>0.227116</td>\n",
              "      <td>-0.359847</td>\n",
              "      <td>0.187518</td>\n",
              "      <td>0.302415</td>\n",
              "      <td>-0.029296</td>\n",
              "      <td>-0.359926</td>\n",
              "      <td>-0.296050</td>\n",
              "      <td>-0.291020</td>\n",
              "      <td>0.193322</td>\n",
              "      <td>0.227116</td>\n",
              "      <td>0.163624</td>\n",
              "      <td>0.081733</td>\n",
              "      <td>-0.234729</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.200502</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>modindx</th>\n",
              "      <td>-0.217621</td>\n",
              "      <td>0.121064</td>\n",
              "      <td>-0.214186</td>\n",
              "      <td>-0.140783</td>\n",
              "      <td>-0.218935</td>\n",
              "      <td>0.039302</td>\n",
              "      <td>0.197580</td>\n",
              "      <td>0.211310</td>\n",
              "      <td>-0.184624</td>\n",
              "      <td>-0.217621</td>\n",
              "      <td>-0.054014</td>\n",
              "      <td>0.002806</td>\n",
              "      <td>-0.359695</td>\n",
              "      <td>0.200502</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-430877c3-4f57-460c-bb84-ca3c2703121f')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-430877c3-4f57-460c-bb84-ca3c2703121f button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-430877c3-4f57-460c-bb84-ca3c2703121f');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 231
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "f,ax = plt.subplots(figsize=(11,11))\n",
        "sns.heatmap(voces1.corr(method='spearman'),annot=True,vmin=-1, vmax=1, center= 0)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 688
        },
        "id": "orAXq5zjF3I0",
        "outputId": "0f8b21a9-0b0c-4d38-edf2-bc813f82b18f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 792x792 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sm = pd.plotting.scatter_matrix(voces1, alpha=0.2, figsize=(15, 15), diagonal='kde')\n",
        "\n",
        "[s.xaxis.label.set_rotation(45) for s in sm.reshape(-1)]\n",
        "[s.yaxis.label.set_rotation(0) for s in sm.reshape(-1)]\n",
        "\n",
        "[s.get_yaxis().set_label_coords(-0.3,0.5) for s in sm.reshape(-1)]\n",
        "\n",
        "[s.set_xticks(()) for s in sm.reshape(-1)]\n",
        "[s.set_yticks(()) for s in sm.reshape(-1)]\n",
        "\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 891
        },
        "id": "a-OanuVIeOhg",
        "outputId": "092aa838-d23b-4569-ba27-b4ddfc1531ee"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1080x1080 with 225 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#En lo referente a las correlaciones, pueden observarse relaciones positivas fuertes entre las variables centroid y meanfreq, centroid y median, centroid y Q25. Tambien entre meanfreq y median y Q25"
      ],
      "metadata": {
        "id": "AwLTJ_whKNEU"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Tablas pivote"
      ],
      "metadata": {
        "id": "1kv9WCnIH0O6"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1.pivot_table('sfm', index= 'maxfun', columns= 'genero', aggfunc= 'sum')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 455
        },
        "id": "ACY0WUM8H3TP",
        "outputId": "4733ba0f-3604-407a-8f0b-68dfa7990990"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "genero     Femenino  Masculino\n",
              "maxfun                        \n",
              "0.000000        NaN   0.369568\n",
              "0.103093        NaN   0.459831\n",
              "0.105263        NaN   0.426590\n",
              "0.108696        NaN   0.479164\n",
              "0.111111        NaN   0.434983\n",
              "...             ...        ...\n",
              "0.277358   0.526191        NaN\n",
              "0.277457  44.668224  60.026979\n",
              "0.277778   8.227506   8.417303\n",
              "0.279070  70.702504  95.039434\n",
              "0.279114   1.054209        NaN\n",
              "\n",
              "[123 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5aaf7c4c-f37e-4506-881a-ca1d1f481b84\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>genero</th>\n",
              "      <th>Femenino</th>\n",
              "      <th>Masculino</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>maxfun</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0.000000</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.369568</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0.103093</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.459831</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0.105263</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.426590</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0.108696</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.479164</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0.111111</th>\n",
              "      <td>NaN</td>\n",
              "      <td>0.434983</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0.277358</th>\n",
              "      <td>0.526191</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0.277457</th>\n",
              "      <td>44.668224</td>\n",
              "      <td>60.026979</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0.277778</th>\n",
              "      <td>8.227506</td>\n",
              "      <td>8.417303</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0.279070</th>\n",
              "      <td>70.702504</td>\n",
              "      <td>95.039434</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0.279114</th>\n",
              "      <td>1.054209</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>123 rows × 2 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5aaf7c4c-f37e-4506-881a-ca1d1f481b84')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-5aaf7c4c-f37e-4506-881a-ca1d1f481b84 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-5aaf7c4c-f37e-4506-881a-ca1d1f481b84');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 236
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize = (20,20))\n",
        "voces.pivot_table('sfm', index= 'maxfun', columns= 'genero', aggfunc= 'sum').plot()\n",
        "plt.title(\"Spectral flatness\")\n",
        "plt.ylabel(\"Maxfun\")\n",
        "plt.xlabel(\"genero\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 312
        },
        "id": "rBYn_nW3IzEa",
        "outputId": "327a4b62-e324-41cc-cb42-d2ff05465f4b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1440x1440 with 0 Axes>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "voces.pivot_table('sfm', index= 'maxfun', columns= 'genero', aggfunc= 'sum').hist();\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 281
        },
        "id": "HUQKzpUAJVc6",
        "outputId": "1834d55c-3e71-4dc9-c5d8-0a04435b786b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Esta tabla pivote refleja, las diferencias en la planura del espcetro entre hombres y mujeres observandose valores mas pronunciados en los valores pertenecientes a las mujeres"
      ],
      "metadata": {
        "id": "gsiYrvhVdpa-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Modelo ML: Regresión logistica.\n",
        "#Se usa este modelo debido a que "
      ],
      "metadata": {
        "id": "g2ZooYyqXEqg"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "voces1.dtypes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WlWiXPuHprqm",
        "outputId": "675e812d-3f45-4dfe-a6f1-4510e758b49c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "meanfreq    float64\n",
              "sd          float64\n",
              "median      float64\n",
              "Q25         float64\n",
              "Q75         float64\n",
              "IQR         float64\n",
              "sp.ent      float64\n",
              "sfm         float64\n",
              "mode        float64\n",
              "centroid    float64\n",
              "meanfun     float64\n",
              "minfun      float64\n",
              "maxfun      float64\n",
              "mindom      float64\n",
              "modindx     float64\n",
              "genero       object\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 241
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(voces1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fNYrUqGlp2uh",
        "outputId": "2943601b-08c4-4921-8c21-a809dace06d3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "      meanfreq        sd    median       Q25       Q75       IQR    sp.ent  \\\n",
            "0     0.059781  0.064241  0.032027  0.015071  0.090193  0.075122  0.893369   \n",
            "1     0.066009  0.067310  0.040229  0.019414  0.092666  0.073252  0.892193   \n",
            "2     0.077316  0.083829  0.036718  0.008701  0.131908  0.123207  0.846389   \n",
            "3     0.151228  0.072111  0.158011  0.096582  0.207955  0.111374  0.963322   \n",
            "4     0.135120  0.079146  0.124656  0.078720  0.206045  0.127325  0.971955   \n",
            "...        ...       ...       ...       ...       ...       ...       ...   \n",
            "3163  0.131884  0.084734  0.153707  0.049285  0.201144  0.151859  0.962934   \n",
            "3164  0.116221  0.089221  0.076758  0.042718  0.204911  0.162193  0.960716   \n",
            "3165  0.142056  0.095798  0.183731  0.033424  0.224360  0.190936  0.946854   \n",
            "3166  0.143659  0.090628  0.184976  0.043508  0.219943  0.176435  0.950436   \n",
            "3167  0.165509  0.092884  0.183044  0.070072  0.250827  0.180756  0.938829   \n",
            "\n",
            "           sfm      mode  centroid   meanfun    minfun    maxfun    mindom  \\\n",
            "0     0.491918  0.000000  0.059781  0.084279  0.015702  0.275862  0.007812   \n",
            "1     0.513724  0.000000  0.066009  0.107937  0.015826  0.250000  0.007812   \n",
            "2     0.478905  0.000000  0.077316  0.098706  0.015656  0.271186  0.007812   \n",
            "3     0.727232  0.083878  0.151228  0.088965  0.017798  0.250000  0.007812   \n",
            "4     0.783568  0.104261  0.135120  0.106398  0.016931  0.266667  0.007812   \n",
            "...        ...       ...       ...       ...       ...       ...       ...   \n",
            "3163  0.763182  0.200836  0.131884  0.182790  0.083770  0.262295  0.007812   \n",
            "3164  0.709570  0.013683  0.116221  0.188980  0.034409  0.275862  0.039062   \n",
            "3165  0.654196  0.008006  0.142056  0.209918  0.039506  0.275862  0.007812   \n",
            "3166  0.675470  0.212202  0.143659  0.172375  0.034483  0.250000  0.007812   \n",
            "3167  0.601529  0.267702  0.165509  0.185607  0.062257  0.271186  0.007812   \n",
            "\n",
            "       modindx     genero  \n",
            "0     0.000000  Masculino  \n",
            "1     0.052632  Masculino  \n",
            "2     0.046512  Masculino  \n",
            "3     0.247119  Masculino  \n",
            "4     0.208274  Masculino  \n",
            "...        ...        ...  \n",
            "3163  0.161929   Femenino  \n",
            "3164  0.277897   Femenino  \n",
            "3165  0.194759   Femenino  \n",
            "3166  0.311002   Femenino  \n",
            "3167  0.350000   Femenino  \n",
            "\n",
            "[3142 rows x 16 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Transformación de variables de tipo object a numéricas\n",
        "#Esto se realiza porque los algoritmos no entienden letras, por lo que se convierte la variable genero, ya que es la unica de tipo objeto."
      ],
      "metadata": {
        "id": "xCca9A8KLdL6"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "obj_voces1 = voces1.select_dtypes(include=['object']).copy()\n",
        "print(obj_voces1.columns)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "u6Bp9KxzLrpn",
        "outputId": "70a67c19-93dd-40b1-998a-bc4eeb81c22c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Index(['genero'], dtype='object')\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import LabelEncoder\n",
        "from sklearn.metrics import mean_squared_error, r2_score"
      ],
      "metadata": {
        "id": "BoB9LiCcMGzZ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Cambio de nombre para la manipulación\n",
        "lb_encoder = LabelEncoder()"
      ],
      "metadata": {
        "id": "PfvxQ8DrMRYK"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "for col in obj_voces1:\n",
        "  voces1[col] = lb_encoder.fit_transform(voces1[col])"
      ],
      "metadata": {
        "id": "ApGL7uVwMedf"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Comprobación de cambio de variables\n",
        "voces1.dtypes"
      ],
      "metadata": {
        "id": "N66RV24fMwSx",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "21d9c691-c316-42d2-de85-a025dd858db7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "meanfreq    float64\n",
              "sd          float64\n",
              "median      float64\n",
              "Q25         float64\n",
              "Q75         float64\n",
              "IQR         float64\n",
              "sp.ent      float64\n",
              "sfm         float64\n",
              "mode        float64\n",
              "centroid    float64\n",
              "meanfun     float64\n",
              "minfun      float64\n",
              "maxfun      float64\n",
              "mindom      float64\n",
              "modindx     float64\n",
              "genero        int64\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 248
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Mediante este proceso se realizó la preparación de los datos para ahora sí, aplicarlos al modelo"
      ],
      "metadata": {
        "id": "OWCz5D6L8jhw"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Creando la separación de datos"
      ],
      "metadata": {
        "id": "zyghybCUNBXl"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "y = voces1.genero.values\n",
        "x = voces1.drop([\"genero\"], axis = 1)"
      ],
      "metadata": {
        "id": "dOUwgmpeQ_k2"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Se separan las variables de forma que \"y\" sea la que se va predecir, o sea, la dependiente (que en este caso es genero), y \"x\" las demás variables predictoras o independientes."
      ],
      "metadata": {
        "id": "r1FiIvfl82Xp"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Train/Test set\n",
        "from sklearn.model_selection import train_test_split\n",
        "x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.20)"
      ],
      "metadata": {
        "id": "oaXpiev7R9uR"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Se determina el Train/Test, para lo cual se asigna un tamaño del test set de 20%, por lo tanto, el training es de 80%"
      ],
      "metadata": {
        "id": "ceW2cnN14mGO"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Feature scaling\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "sc_X = StandardScaler()\n",
        "x_train = sc_X.fit_transform(x_train)\n",
        "x_test = sc_X.transform(x_test)"
      ],
      "metadata": {
        "id": "qzYSQjQBSnRf"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#En este paso realizamos un escalado de características, con el fin de normalizar el rando de variables independientes, o sea, que cada característica contribuya de manera proporcional a la prediccion del genero."
      ],
      "metadata": {
        "id": "0t_IRS9p_1t-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Entrenamiento del modelo\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "classifier = LogisticRegression(random_state = 0)\n",
        "classifier.fit(x_train, y_train)"
      ],
      "metadata": {
        "id": "zTFJfYlHTSGU",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9c27cc10-7a82-4aea-f7ad-f0d2a45f484e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LogisticRegression(random_state=0)"
            ]
          },
          "metadata": {},
          "execution_count": 260
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#En este paso importamos el modelo a utilzar, el cual es una regresión logístca, pues queremos predecir la probabilidad de que el conjunto de datos de las variables de entrada sea de una determinada clase en una clasificación binaria (en este caso femenino o masculino). \"random_state\" se utiliza con el fin de que todos den lo mismo. Finalmente se ajusta con el x_train y y_train que determinamos anteriormente"
      ],
      "metadata": {
        "id": "cG6GaSE5AuKu"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Predicciones\n",
        "y_pred = classifier.predict(x_test) "
      ],
      "metadata": {
        "id": "4Co-o7ZjTi10"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Acá vamos a predecir y (y_pred) a través del x_test."
      ],
      "metadata": {
        "id": "eJZHETDSCL4O"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Evaluación del modelo"
      ],
      "metadata": {
        "id": "hD0EZtzlCd9Z"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Matriz de confusion\n",
        "from sklearn.metrics import confusion_matrix\n",
        "cm = confusion_matrix(y_test, y_pred)"
      ],
      "metadata": {
        "id": "gfephTtDUHF3"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Se importa la matriz de confusión, la cual permite comparar la \"y\" real vs la \"y\" que el algoritmo predijo."
      ],
      "metadata": {
        "id": "XHR3CVJeCgd3"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(cm)"
      ],
      "metadata": {
        "id": "xO6FccZ9OLtc",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "da12bf2d-202a-4e7f-f90d-10fd3de604db"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[291  11]\n",
            " [  8 319]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "#La matriz muestra en los cuadrantes superior izquierdo e inferior derecho los valores verdaderos, mientras que en los otros dos cuadrantes se muestran los valores falsos. En este caso, de 302 personas, el algoritmo clasificó 291 correctamente como genero femenino, con 11 errores de tipo B o falsos negativos; también de 327 personas clasificó correctamente a 319 como genero masculino, y hubo 8 errores de tipo alfa o falso positivo. Se decide confiar en el algoritmo, pues la cantidad de errores es muy baja. Además, es esperable por las variaciones intrínsecas de las personas en la voz, ya que no todos los hombres tienen voz grave y no todas las mujeres una voz más aguda."
      ],
      "metadata": {
        "id": "i_ZqlTdg244x"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Conclusiones y recomendaciones\n",
        "\n",
        "#Conclusiones\n",
        "#Debido a la contaminación que tenía el dataset debió recurrirse a la eliminación de valores nulos en las variables y a la eliminación de las que no pudieron limpiarse por la cantidad de datos sucios\n",
        "#Las variables del dataset analizado en general presentan correlaciones bajas. Sin embargo, existe correlación positiva fuerte entre las variables centroid y meanfreq y centroid y median\n",
        "#La regresión logística se consideró el modelo más apropiado debido a la naturaleza dicotómica de la variable género. El modelo genero un resultado aceptable de acuerdo a la prueba aplicada\n",
        "\n",
        "#Recomendaciones\n",
        "#De acuerdo con estudios recientes el reconocimiento de voz por genero tiene importantes implicaciones en ámbitos como la búsqueda de empleo o la aplicación de comandos por voz en donde el tono de voz de las mujeres no es reconocido por algunos dispositivos. De ahí la importancia de utilizar la mayor cantidad de variables posibles para poder enseñar bien a los algoritmos utilizados para el reconocimiento de voz\n",
        "#Gracias al análisis de los parámetros de la voz pueden identificar ciertas características físicas de las personas como: la edad, el sexo, la altura y el peso y así generar una imagen de la persona a partir de su voz"
      ],
      "metadata": {
        "id": "dLBi-9j1F4zT"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}